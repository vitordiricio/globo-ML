# analises_estaticas.py
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import streamlit as st
import plotly.express as px
import plotly.graph_objects as go
import numpy as np
from scipy import stats

@st.cache_data
def analise_redes_sociais(df):
    """
    Realiza an√°lises est√°ticas de redes sociais utilizando o dataframe tratado,
    onde as colunas seguem o padr√£o 'PLATAFORMA_metrica'.
    """
    st.markdown("""
    ## An√°lise de Redes Sociais
    
    Nesta an√°lise, avaliamos o desempenho das diferentes plataformas sociais da Globo, comparando m√©tricas 
    de engajamento como coment√°rios, rea√ß√µes, compartilhamentos e visualiza√ß√µes. O objetivo √© identificar:
    
    - Quais plataformas geram maior engajamento total
    - Qual √© a efici√™ncia de cada plataforma (engajamento por post)
    - Como est√° a distribui√ß√£o de esfor√ßo (quantidade de posts) entre plataformas
    - Se o esfor√ßo est√° concentrado nas plataformas de melhor desempenho
    """)
    
    # Defini√ß√£o das plataformas e das m√©tricas originais
    platforms = ["FACEBOOK", "TIKTOK", "INSTAGRAM", "YOUTUBE"]
    metrics = [
        "nr_comments", "nr_reactions", "nr_saves",
        "nr_shares", "nr_reach", "total_interactions", "nr_views", "nr_impressions"
    ]

    # Calcula o engajamento total para cada plataforma (soma de todas as m√©tricas de engajamento)
    for platform in platforms:
        cols = [f"{platform}_{m}" for m in metrics if f"{platform}_{m}" in df.columns]
        if cols:
            df[f"{platform}_engagement"] = df[cols].sum(axis=1)
        else:
            df[f"{platform}_engagement"] = 0

        # Calcula o engajamento m√©dio por post, utilizando a coluna de quantidade de posts
        posts_col = f"{platform}_posts_quantity"
        if posts_col in df.columns and df[posts_col].sum() != 0:
            df[f"{platform}_avg_engagement"] = df[f"{platform}_engagement"] / df[posts_col]
        else:
            df[f"{platform}_avg_engagement"] = 0

    # Determina a melhor plataforma em termos de engajamento m√©dio (m√©dia ao longo do tempo)
    avg_engagements = {
        platform: df[f"{platform}_avg_engagement"].mean() 
        for platform in platforms if f"{platform}_avg_engagement" in df.columns
    }
    best_platform = max(avg_engagements, key=avg_engagements.get) if avg_engagements else "N/D"

    # Determina a plataforma com maior quantidade de posts (soma total)
    posts = {
        platform: df[f"{platform}_posts_quantity"].sum() 
        for platform in platforms if f"{platform}_posts_quantity" in df.columns
    }
    most_posts_platform = max(posts, key=posts.get) if posts else "N/D"

    # Texto din√¢mico com as principais conclus√µes
    if best_platform == most_posts_platform:
        st.success(f"**Voc√™s t√™m mais engajamento em {best_platform} e investem mais em {most_posts_platform}.**")
        st.markdown(f"""
        ### üìä Alinhamento de Esfor√ßo e Resultado
        
        A estrat√©gia atual est√° bem alinhada! A plataforma **{best_platform}** apresenta o melhor engajamento m√©dio e 
        √© tamb√©m onde voc√™s concentram a maior quantidade de posts. Isso indica uma aloca√ß√£o eficiente de recursos,
        priorizando o canal que traz os melhores resultados por post.
        """)
    else:
        st.error(f"**Voc√™s t√™m mais engajamento em {best_platform} e investem mais em {most_posts_platform}.**")
        st.markdown(f"""
        ### ‚ö†Ô∏è Desalinhamento de Esfor√ßo e Resultado
        
        Existe uma oportunidade de otimiza√ß√£o na estrat√©gia! Enquanto a plataforma **{best_platform}** apresenta o melhor 
        engajamento m√©dio, a maior quantidade de posts est√° sendo direcionada para **{most_posts_platform}**. 
        
        **Recomenda√ß√£o:** Considere realocar parte do esfor√ßo para a plataforma de maior engajamento, 
        ou investigar por que o engajamento no {most_posts_platform} est√° abaixo do esperado, apesar do investimento.
        """)

    # --- Gr√°ficos ---
    # Cria um dataframe derretido com as colunas que possuem as m√©tricas originais
    cols_to_melt = []
    for col in df.columns:
        for m in metrics:
            if col.endswith(m):
                cols_to_melt.append(col)
                break

    df_melted = df.melt(
        id_vars=["ts_published_brt"],
        value_vars=cols_to_melt,
        var_name="col",
        value_name="valor"
    )
    # Extrai a plataforma e a m√©trica a partir do nome da coluna
    df_melted["platform"] = df_melted["col"].apply(lambda x: x.split("_")[0])
    df_melted["metrica"] = df_melted["col"].apply(lambda x: "_".join(x.split("_")[1:]))

    # Filtra para manter somente as m√©tricas originais
    df_plot1 = df_melted[df_melted["metrica"].isin(metrics)]

    st.markdown("""
    ### An√°lise Comparativa das Plataformas
    
    Os gr√°ficos abaixo apresentam uma vis√£o detalhada do desempenho de cada plataforma:
    
    1. **Engajamento total por plataforma:** Soma de todas as m√©tricas de engajamento para cada plataforma
    2. **Engajamento m√©dio por plataforma:** Engajamento por post, mostrando a efici√™ncia de cada canal
    3. **Quantidade de posts por plataforma:** Distribui√ß√£o do esfor√ßo entre os canais
    4. **Engajamento ao longo do tempo:** Tend√™ncias temporais no engajamento de cada plataforma
    """)
    
    sns.set_style("whitegrid")
    fig, axes = plt.subplots(2, 2, figsize=(16, 10))

    # Plot 1: Total Engagement per Platform (soma de cada m√©trica ao longo de todas as datas)
    total_engagement = df_plot1.groupby(["platform", "metrica"])["valor"].sum().reset_index()
    sns.barplot(x="platform", y="valor", hue="metrica", data=total_engagement, ax=axes[0, 0])
    axes[0, 0].set_title("Engajamento total por plataforma")
    axes[0, 0].set_xlabel("Plataforma")
    axes[0, 0].set_ylabel("Total de Engajamento")

    # Plot 2: Average Engagement per Post per Platform
    avg_values = [df[f"{platform}_avg_engagement"].mean() for platform in platforms]
    sns.barplot(x=platforms, y=avg_values, ax=axes[0, 1])
    axes[0, 1].set_title("Engajamento m√©dio por plataforma")
    axes[0, 1].set_xlabel("Plataforma")
    axes[0, 1].set_ylabel("Engajamento M√©dio por Post")

    # Plot 3: N√∫mero de Posts por Plataforma
    posts_values = [df[f"{platform}_posts_quantity"].sum() for platform in platforms]
    sns.barplot(x=platforms, y=posts_values, ax=axes[1, 0])
    axes[1, 0].set_title("Qtd. de posts por plataforma")
    axes[1, 0].set_xlabel("Plataforma")
    axes[1, 0].set_ylabel("Quantidade de Posts")

    # Plot 4: Engagement Over Time para cada plataforma
    for platform in platforms:
        col_eng = f"{platform}_engagement"
        if col_eng in df.columns:
            sns.lineplot(x="ts_published_brt", y=col_eng, data=df, label=platform, ax=axes[1, 1])
    axes[1, 1].set_title("Engajamento x tempo")
    axes[1, 1].set_xlabel("Data")
    axes[1, 1].set_ylabel("Engajamento")

    plt.tight_layout(w_pad=10.0, h_pad=5.0)
    st.pyplot(fig)
    
    st.markdown("""
    ### Interpreta√ß√£o dos Resultados
    
    **Insights importantes:**
    
    1. **Tipos de engajamento** - Diferentes plataformas destacam-se em diferentes tipos de engajamento. Por exemplo, 
    o Instagram geralmente tem mais coment√°rios, enquanto o YouTube tende a ter mais visualiza√ß√µes de v√≠deo.
    
    2. **Efici√™ncia vs. Volume** - Uma plataforma pode ter alto engajamento total devido ao grande volume de posts, 
    mas baixa efici√™ncia por post. O ideal √© focar nas plataformas com maior engajamento m√©dio.
    
    3. **Tend√™ncias temporais** - O gr√°fico de engajamento ao longo do tempo pode revelar sazonalidades ou 
    crescimento/decl√≠nio do desempenho, o que ajuda a entender a evolu√ß√£o da audi√™ncia digital.
    
    **Como usar esta an√°lise:** Os resultados podem orientar decis√µes sobre onde concentrar esfor√ßos de produ√ß√£o de conte√∫do,
    quais plataformas priorizar para determinados tipos de conte√∫do, e como balancear a distribui√ß√£o de recursos entre canais.
    """)

@st.cache_data
def analise_streaming_vs_linear(df):
    """
    An√°lise para responder perguntas sobre como o streaming est√° impactando a TV linear.
    """
    st.header("O streaming est√° reduzindo a relev√¢ncia da TV linear?")
    
    st.markdown("""
    Esta an√°lise investiga a rela√ß√£o entre o consumo de streaming (Globoplay) e a audi√™ncia tradicional de TV Linear,
    buscando entender se h√° um padr√£o de substitui√ß√£o (quando um canal reduz o outro) ou complementaridade
    (quando ambos os canais se refor√ßam mutuamente).
    
    Tr√™s quest√µes principais ser√£o analisadas:
    1. O impacto do Globoplay na audi√™ncia da TV Linear
    2. O perfil de consumo entre usu√°rios de streaming vs. TV Linear
    3. Comportamentos de novas gera√ß√µes em rela√ß√£o aos dois meios
    """)
    
    # Verificar se temos os dados necess√°rios
    gp_cols = [col for col in df.columns if col.startswith('GP_')]
    linear_cols = [col for col in df.columns if col.startswith('LINEAR_')]
    
    if len(gp_cols) > 0 and len(linear_cols) > 0:
        # 1.1 O aumento de usu√°rios e visualiza√ß√µes no Globoplay impacta negativamente o alcance da TV Linear?
        st.subheader("1.1 O aumento de usu√°rios e visualiza√ß√µes no Globoplay impacta negativamente o alcance da TV Linear?")
        
        st.markdown("""
        Nesta primeira an√°lise, investigamos se existe uma correla√ß√£o inversa entre o consumo de Globoplay e a audi√™ncia de TV Linear.
        
        **Metodologia:**
        - Agrupamos os dados por dia para obter m√©dias di√°rias
        - Calculamos a correla√ß√£o entre usu√°rios do Globoplay e o alcance da TV Linear
        - Analisamos a correla√ß√£o entre horas consumidas no Globoplay e o rating de TV Linear
        - Observamos a tend√™ncia temporal para identificar padr√µes de longo prazo
        
        **Como interpretar:**
        - Correla√ß√£o negativa forte (pr√≥xima de -1): indica substitui√ß√£o (mais streaming = menos TV)
        - Correla√ß√£o positiva forte (pr√≥xima de +1): indica complementaridade (ambos crescem juntos)
        - Correla√ß√£o pr√≥xima de zero: indica que os servi√ßos atendem a necessidades diferentes
        """)
        
        # Agrupar por data para an√°lise di√°ria
        df_diario = df.copy()
        df_diario['data'] = pd.to_datetime(df_diario['data_hora']).dt.date
        
        # Selecionar apenas colunas num√©ricas para agrega√ß√£o
        numeric_cols = df_diario.select_dtypes(include=['number']).columns.tolist()
        # Garantir que 'data' n√£o est√° nas colunas para agrega√ß√£o
        if 'data' in numeric_cols:
            numeric_cols.remove('data')
            
        # Agrupar apenas colunas num√©ricas
        df_diario = df_diario.groupby('data')[numeric_cols].mean().reset_index()
        
        # Selecionar m√©tricas relevantes
        gp_users = 'GP_usu√°rios_assinantes_'
        gp_hours = 'GP_horas_consumidas_assinantes'
        linear_reach = 'LINEAR_GLOBO_cov%'
        linear_rating = 'LINEAR_GLOBO_rat%'
        
        # Verificar se as m√©tricas existem
        metrics_exist = all(metric in df_diario.columns for metric in [gp_users, gp_hours, linear_reach, linear_rating])
        
        if metrics_exist:
            # Calcular correla√ß√µes
            correlation_users_reach = df_diario[gp_users].corr(df_diario[linear_reach])
            correlation_hours_rating = df_diario[gp_hours].corr(df_diario[linear_rating])
            
            # Criar visualiza√ß√£o de correla√ß√£o
            col1, col2 = st.columns(2)
            
            with col1:
                fig = px.scatter(df_diario, x=gp_users, y=linear_reach,
                                trendline="ols", 
                                title=f"Correla√ß√£o: Usu√°rios Globoplay vs Alcance TV Linear (r = {correlation_users_reach:.2f})")
                fig.update_layout(xaxis_title="Usu√°rios Assinantes Globoplay", 
                                yaxis_title="% Cobertura TV Linear")
                st.plotly_chart(fig, use_container_width=True)
            
            with col2:
                fig = px.scatter(df_diario, x=gp_hours, y=linear_rating,
                                trendline="ols", 
                                title=f"Correla√ß√£o: Horas Consumidas vs Rating TV Linear (r = {correlation_hours_rating:.2f})")
                fig.update_layout(xaxis_title="Horas Consumidas Globoplay", 
                                yaxis_title="% Rating TV Linear")
                st.plotly_chart(fig, use_container_width=True)
            
            # An√°lise autom√°tica baseada nas correla√ß√µes
            if correlation_users_reach < -0.3:
                st.error("**H√° uma correla√ß√£o negativa significativa entre usu√°rios do Globoplay e o alcance da TV Linear, sugerindo substitui√ß√£o de m√≠dia.**")
                st.markdown("""
                Os dados mostram uma correla√ß√£o negativa significativa, indicando que quando mais pessoas usam o Globoplay, 
                menos pessoas assistem √† TV Linear. Este padr√£o sugere um efeito de substitui√ß√£o, onde o streaming est√° 
                efetivamente substituindo o consumo tradicional de TV.
                
                **Implica√ß√µes:** Este resultado indica que pode ser necess√°rio desenvolver estrat√©gias espec√≠ficas para cada canal, 
                reconhecendo que eles est√£o competindo pelo tempo do espectador, em vez de se complementarem.
                """)
            elif correlation_users_reach > 0.3:
                st.success("**H√° uma correla√ß√£o positiva entre usu√°rios do Globoplay e o alcance da TV Linear, sugerindo complementaridade.**")
                st.markdown("""
                Os dados mostram uma correla√ß√£o positiva significativa, indicando que o crescimento de usu√°rios do Globoplay 
                est√° associado a um aumento no alcance da TV Linear. Isso sugere que os servi√ßos s√£o complementares - provavelmente 
                porque o conte√∫do em um meio estimula o interesse no outro.
                
                **Implica√ß√µes:** Este resultado favorece estrat√©gias de conte√∫do integradas que criam sinergias entre plataformas,
                como usar o Globoplay para estender a experi√™ncia de programas da TV Linear ou vice-versa.
                """)
            else:
                st.info("**N√£o existe correla√ß√£o forte entre usu√°rios do Globoplay e o alcance da TV Linear, sugerindo que os servi√ßos atendem a necessidades diferentes.**")
                st.markdown("""
                A correla√ß√£o fraca indica que o uso do Globoplay e o consumo de TV Linear s√£o relativamente independentes entre si.
                Isso sugere que os servi√ßos atendem a diferentes necessidades dos consumidores ou a diferentes momentos de consumo.
                
                **Implica√ß√µes:** Esta independ√™ncia sugere que √© poss√≠vel desenvolver estrat√©gias espec√≠ficas para cada plataforma
                sem grandes preocupa√ß√µes com canibaliza√ß√£o. Os conte√∫dos podem ser customizados para atender √†s expectativas
                espec√≠ficas de cada meio.
                """)
            
            # Tend√™ncia ao longo do tempo
            fig = go.Figure()
            
            # Normalizar valores para compara√ß√£o
            gp_users_norm = df_diario[gp_users] / df_diario[gp_users].max()
            linear_reach_norm = df_diario[linear_reach] / df_diario[linear_reach].max()
            
            fig.add_trace(go.Scatter(x=df_diario['data'], y=gp_users_norm, 
                                    name='Usu√°rios Globoplay (Normalizado)',
                                    line=dict(color='#1f77b4')))
            
            fig.add_trace(go.Scatter(x=df_diario['data'], y=linear_reach_norm, 
                                    name='Alcance TV Linear (Normalizado)',
                                    line=dict(color='#ff7f0e')))
            
            fig.update_layout(title='Tend√™ncia: Usu√°rios Globoplay vs Alcance TV Linear',
                            xaxis_title='Data',
                            yaxis_title='Valor Normalizado (0-1)')
            
            st.plotly_chart(fig, use_container_width=True)
            
            st.markdown("""
            **Interpreta√ß√£o da tend√™ncia temporal:**
            
            O gr√°fico acima mostra a evolu√ß√£o normalizada de usu√°rios do Globoplay e do alcance da TV Linear ao longo do tempo.
            Padr√µes a observar:
            
            - **Movimentos na mesma dire√ß√£o:** Indicam complementaridade (ambos crescem ou diminuem juntos)
            - **Movimentos em dire√ß√µes opostas:** Indicam substitui√ß√£o (quando um cresce, o outro diminui)
            - **Mudan√ßas sazonais:** Podem revelar per√≠odos espec√≠ficos onde a rela√ß√£o entre os meios se altera
            
            Esta visualiza√ß√£o temporal complementa a an√°lise de correla√ß√£o, ajudando a entender como a rela√ß√£o
            entre streaming e TV linear evolui com o tempo.
            """)
        else:
            st.warning("Algumas m√©tricas necess√°rias n√£o est√£o dispon√≠veis para an√°lise completa.")
        
        # 1.2 O consumidor que usa streaming tende a n√£o consumir TV Linear?
        st.subheader("1.2 O consumidor que usa streaming tende a n√£o consumir TV Linear?")
        
        st.markdown("""
        Aqui investigamos o comportamento dos consumidores para identificar se h√° um perfil de "ou um ou outro"
        ou se os mesmos consumidores utilizam ambos os servi√ßos em momentos diferentes.
        
        **Metodologia:**
        - Analisamos o consumo por per√≠odo do dia (manh√£, tarde, noite, madrugada)
        - Segmentamos o consumo por n√≠vel de uso do Globoplay
        - Observamos como o rating da TV Linear varia entre os diferentes n√≠veis de uso de streaming
        
        **Como interpretar:**
        - Rating menor nos grupos de alto uso de streaming: sugere substitui√ß√£o
        - Rating maior nos grupos de alto uso de streaming: sugere complementaridade
        - Varia√ß√µes por per√≠odo do dia: revelam diferentes comportamentos ao longo do dia
        """)
        
        # Para esta an√°lise, idealmente precisar√≠amos de dados no n√≠vel de usu√°rio
        # Como n√£o temos esse n√≠vel de detalhe, vamos fazer uma an√°lise de segmentos de tempo
        
        # Dividir o dia em per√≠odos (manh√£, tarde, noite)
        df['hora'] = pd.to_datetime(df['data_hora']).dt.hour
        df['periodo'] = pd.cut(df['hora'], 
                              bins=[0, 6, 12, 18, 24], 
                              labels=['Madrugada', 'Manh√£', 'Tarde', 'Noite'])
        
        # Selecionar apenas colunas num√©ricas para agrega√ß√£o
        numeric_cols = df.select_dtypes(include=['number']).columns.tolist()
        
        # Analisar consumo por per√≠odo
        df_periodo = df.groupby('periodo')[numeric_cols].mean().reset_index()
        
        # Verificar se as colunas existem
        if 'GP_usu√°rios_assinantes_' in df_periodo.columns and 'LINEAR_GLOBO_rat%' in df_periodo.columns:
            fig = px.bar(df_periodo, x='periodo', 
                        y=['GP_usu√°rios_assinantes_', 'LINEAR_GLOBO_rat%'],
                        barmode='group',
                        title='Consumo de Streaming vs TV Linear por Per√≠odo do Dia',
                        labels={'value': 'Valor M√©dio', 'periodo': 'Per√≠odo do Dia', 
                               'variable': 'M√©trica'})
            
            st.plotly_chart(fig, use_container_width=True)
            
            st.markdown("""
            **An√°lise por per√≠odo do dia:**
            
            O gr√°fico acima mostra a distribui√ß√£o do consumo de Globoplay e TV Linear em diferentes per√≠odos do dia.
            
            Pontos importantes:
            - **Per√≠odos de pico para cada meio:** Identificar quando cada plataforma apresenta maior consumo
            - **Padr√µes de uso complementar:** Verificar se h√° per√≠odos onde ambos s√£o consumidos intensamente
            - **Janelas de oportunidade:** Per√≠odos de baixo consumo em ambas as plataformas representam oportunidades
            
            Esta an√°lise temporal √© crucial para entender como os h√°bitos de consumo se distribuem ao longo do dia,
            permitindo estrat√©gias de programa√ß√£o e promo√ß√£o mais eficazes.
            """)
        
        # Calcular tend√™ncia de uso complementar ou substituto
        if 'GP_usu√°rios_assinantes_' in df.columns and 'LINEAR_GLOBO_rat%' in df.columns:
            # Criar bins baseados nos quartis de usu√°rios Globoplay
            df_temp = df.copy()
            # Usar apenas valores n√£o-nan para criar os bins
            valid_mask = ~df_temp['GP_usu√°rios_assinantes_'].isna()
            if valid_mask.sum() > 0:
                df_temp.loc[valid_mask, 'gp_users_bin'] = pd.qcut(
                    df_temp.loc[valid_mask, 'GP_usu√°rios_assinantes_'], 
                    4, 
                    labels=['Baixo', 'M√©dio-Baixo', 'M√©dio-Alto', 'Alto']
                )
                
                # Calcular rating m√©dio de TV Linear para cada bin
                rating_by_gp_bin = df_temp.groupby('gp_users_bin')['LINEAR_GLOBO_rat%'].mean().reset_index()
                
                fig = px.bar(rating_by_gp_bin, x='gp_users_bin', y='LINEAR_GLOBO_rat%',
                            title='Rating TV Linear por N√≠vel de Uso do Globoplay',
                            labels={'gp_users_bin': 'N√≠vel de Uso do Globoplay', 
                                   'LINEAR_GLOBO_rat%': 'Rating M√©dio TV Linear (%)'})
                
                st.plotly_chart(fig, use_container_width=True)
                
                # An√°lise autom√°tica
                trend = rating_by_gp_bin['LINEAR_GLOBO_rat%'].values
                if len(trend) >= 3 and trend[0] > trend[-1]:
                    st.error("**Os dados sugerem que usu√°rios mais ativos no Globoplay tendem a consumir menos TV Linear, indicando substitui√ß√£o.**")
                    st.markdown("""
                    **An√°lise de substitui√ß√£o detectada:**
                    
                    O gr√°fico revela um padr√£o claro: quanto maior o uso do Globoplay, menor o consumo de TV Linear.
                    Esta tend√™ncia decrescente confirma um efeito de substitui√ß√£o, onde o tempo gasto em streaming
                    reduz diretamente o tempo dispon√≠vel para TV Linear.
                    
                    **Implica√ß√µes estrat√©gicas:**
                    - Considerar estrat√©gias de diferencia√ß√£o de conte√∫do entre as plataformas
                    - Desenvolver planos de migra√ß√£o gradual de audi√™ncia para streaming mantendo receitas
                    - Avaliar modelos de neg√≥cio que capitalizem o comportamento de substitui√ß√£o
                    """)
                elif len(trend) >= 3 and trend[0] < trend[-1]:
                    st.success("**Os dados sugerem que usu√°rios mais ativos no Globoplay tamb√©m consomem mais TV Linear, indicando complementaridade.**")
                    st.markdown("""
                    **An√°lise de complementaridade detectada:**
                    
                    O gr√°fico mostra um padr√£o ascendente: quanto maior o uso do Globoplay, maior tamb√©m o consumo de TV Linear.
                    Esta rela√ß√£o positiva confirma que os servi√ßos s√£o complementares, provavelmente refor√ßando o interesse m√∫tuo.
                    
                    **Implica√ß√µes estrat√©gicas:**
                    - Investir em estrat√©gias cross-media que criem jornadas entre as plataformas
                    - Desenvolver conte√∫dos que se complementem entre streaming e TV Linear
                    - Explorar promo√ß√µes conjuntas que incentivem o uso de ambas as plataformas
                    """)
                else:
                    st.info("**N√£o h√° um padr√£o claro de substitui√ß√£o ou complementaridade entre o uso de Globoplay e TV Linear.**")
                    st.markdown("""
                    **An√°lise de independ√™ncia:**
                    
                    O gr√°fico n√£o apresenta uma tend√™ncia consistente, sugerindo que a rela√ß√£o entre uso de Globoplay e 
                    consumo de TV Linear √© complexa e possivelmente influenciada por outros fatores como tipo de conte√∫do,
                    hor√°rio, ou perfil demogr√°fico.
                    
                    **Implica√ß√µes estrat√©gicas:**
                    - Investigar fatores contextuais ou segmentos espec√≠ficos onde h√° complementaridade ou substitui√ß√£o
                    - Considerar estrat√©gias diferenciadas por tipo de conte√∫do ou momento de consumo
                    - Explorar modelos h√≠bridos que maximizem o valor em ambas as plataformas
                    """)
        
        # 1.3 An√°lise de comportamento de novas gera√ß√µes
        st.subheader("1.3 An√°lise de comportamento de novas gera√ß√µes podem revelar padr√µes de substitui√ß√£o ou complementaridade")
        
        st.markdown("üöß **WORK IN PROGRESS** üöß")
        st.info("Esta an√°lise requer dados demogr√°ficos que n√£o est√£o dispon√≠veis no conjunto de dados atual. Seria necess√°rio ter informa√ß√µes sobre faixa et√°ria dos usu√°rios para avaliar comportamentos geracionais.")
        
        st.markdown("""
        **O que pretendemos analisar aqui:**
        
        Esta se√ß√£o buscaria identificar diferen√ßas nos padr√µes de consumo entre diferentes gera√ß√µes, 
        especialmente focando nas gera√ß√µes mais jovens (Z e Alpha) versus gera√ß√µes mais velhas.
        
        **Metodologia que seria utilizada:**
        - Segmenta√ß√£o dos dados por faixa et√°ria
        - An√°lise de prefer√™ncias de dispositivo por gera√ß√£o
        - Padr√µes de consumo simult√¢neo ou exclusivo por faixa et√°ria
        - Tend√™ncias temporais espec√≠ficas de cada gera√ß√£o
        
        **Dados necess√°rios para esta an√°lise:**
        - Informa√ß√µes demogr√°ficas dos usu√°rios (idade/gera√ß√£o)
        - M√©tricas de uso por dispositivo segmentadas por idade
        - Hist√≥rico de consumo longitudinal por faixa et√°ria
        
        Esta an√°lise ser√° implementada quando os dados demogr√°ficos estiverem dispon√≠veis.
        """)
        
    else:
        st.warning("Dados insuficientes para realizar a an√°lise. √â necess√°rio ter m√©tricas de Globoplay (GP_) e TV Linear (LINEAR_).")

@st.cache_data
def analise_social_impacto(df):
    """
    An√°lise para responder perguntas sobre como os sites e redes sociais impactam a TV linear.
    """
    st.header("Os sites e Social da Globo servem como chamariz da TV linear?")
    
    st.markdown("""
    Esta an√°lise investiga como as plataformas digitais da Globo (redes sociais e sites) influenciam
    a audi√™ncia da TV Linear. O objetivo √© entender se elas funcionam como complemento, atraindo
    audi√™ncia para a TV, ou se competem pela aten√ß√£o do p√∫blico.
    
    Exploramos tr√™s quest√µes principais:
    1. O impacto das publica√ß√µes nas redes sociais no alcance da TV Linear
    2. O uso dos sites como segunda tela durante o consumo de TV Linear
    3. O papel das diferentes plataformas sociais como complemento √† experi√™ncia de TV
    """)
    
    # Verificar se temos os dados necess√°rios
    rs_cols = [col for col in df.columns if col.startswith('RS_')]
    linear_cols = [col for col in df.columns if col.startswith('LINEAR_')]
    
    if len(rs_cols) > 0 and len(linear_cols) > 0:
        # 2.1 Mais publica√ß√µes dos nossos conte√∫dos aumentam o nosso alcance?
        st.subheader("2.1 Mais publica√ß√µes dos nossos conte√∫dos aumentam o nosso alcance (principalmente para novas gera√ß√µes)?")
        
        st.markdown("""
        Esta an√°lise examina a rela√ß√£o entre o volume de publica√ß√µes nas redes sociais e o alcance da TV Linear,
        buscando entender se existe um efeito de "chamariz" onde posts nas redes sociais atraem audi√™ncia para a TV.
        
        **Metodologia:**
        - Analisamos a correla√ß√£o entre quantidade de posts e cobertura de TV
        - Aplicamos um lag de 1 dia para avaliar o efeito posterior dos posts
        - Comparamos o impacto de diferentes plataformas sociais
        - Analisamos o efeito especificamente em hor√°rios com p√∫blico mais jovem
        
        **Como interpretar:**
        - Correla√ß√£o positiva forte: indica que posts sociais aumentam a cobertura TV
        - Diferen√ßas entre plataformas: revelam quais redes t√™m maior impacto na TV
        - Compara√ß√µes por hor√°rio: mostram se o efeito √© maior para p√∫blicos jovens
        """)
        
        # Identificar colunas de quantidade de posts
        posts_cols = [col for col in rs_cols if 'posts_quantity' in col]
        
        if posts_cols and 'LINEAR_GLOBO_cov%' in df.columns:
            # Criar m√©trica agregada de posts
            df['total_posts'] = df[posts_cols].sum(axis=1)
            
            # An√°lise de lag para verificar efeito de posts na cobertura TV
            # Criar lag de 1 dia para posts
            df['data_apenas'] = pd.to_datetime(df['data_hora']).dt.date
            df_daily = df.groupby('data_apenas').agg({
                'total_posts': 'sum',
                'LINEAR_GLOBO_cov%': 'mean'
            }).reset_index()
            
            df_daily['posts_lag1'] = df_daily['total_posts'].shift(1)
            df_daily = df_daily.dropna()
            
            # Correla√ß√£o entre posts e cobertura
            corr_posts_cov = df_daily['posts_lag1'].corr(df_daily['LINEAR_GLOBO_cov%'])
            
            fig = px.scatter(df_daily, x='posts_lag1', y='LINEAR_GLOBO_cov%',
                            trendline="ols", 
                            title=f"Efeito de Posts de Redes Sociais na Cobertura TV (r = {corr_posts_cov:.2f})")
            fig.update_layout(xaxis_title="Quantidade de Posts (Dia Anterior)", 
                            yaxis_title="% Cobertura TV Linear")
            st.plotly_chart(fig, use_container_width=True)
            
            st.markdown(f"""
            **Interpreta√ß√£o da rela√ß√£o entre posts e cobertura TV:**
            
            O gr√°fico acima mostra a rela√ß√£o entre a quantidade de posts nas redes sociais em um dia e a 
            cobertura da TV Linear no dia seguinte, com correla√ß√£o de **{corr_posts_cov:.2f}**.
            
            {
                "**A correla√ß√£o positiva indica que posts nas redes sociais efetivamente funcionam como chamariz para a TV Linear, aumentando sua cobertura.**" 
                if corr_posts_cov > 0.3 else
                "**A correla√ß√£o negativa sugere que maior atividade nas redes sociais pode estar desviando a aten√ß√£o da TV Linear.**" 
                if corr_posts_cov < -0.3 else
                "**A correla√ß√£o fraca sugere que o volume de posts nas redes sociais tem impacto limitado na cobertura da TV Linear.**"
            }
            
            Este resultado tem implica√ß√µes importantes para a estrat√©gia de distribui√ß√£o de conte√∫do e promo√ß√£o cruzada entre plataformas.
            """)
            
            # An√°lise por plataforma
            st.subheader("Impacto dos posts por plataforma na cobertura de TV")
            
            platforms = ["FACEBOOK", "INSTAGRAM", "TIKTOK", "YOUTUBE"]
            corrs = []
            
            for platform in platforms:
                platform_posts = [col for col in posts_cols if platform in col]
                if platform_posts:
                    df[f'posts_{platform}'] = df[platform_posts].sum(axis=1)
                    df_plat = df.groupby('data_apenas').agg({
                        f'posts_{platform}': 'sum',
                        'LINEAR_GLOBO_cov%': 'mean'
                    }).reset_index()
                    
                    df_plat[f'posts_{platform}_lag1'] = df_plat[f'posts_{platform}'].shift(1)
                    df_plat = df_plat.dropna()
                    
                    if len(df_plat) > 5:  # Garantir dados suficientes
                        corr = df_plat[f'posts_{platform}_lag1'].corr(df_plat['LINEAR_GLOBO_cov%'])
                        corrs.append({'Plataforma': platform, 'Correla√ß√£o': corr})
            
            if corrs:
                df_corrs = pd.DataFrame(corrs)
                fig = px.bar(df_corrs, x='Plataforma', y='Correla√ß√£o',
                            title="Impacto de posts por plataforma na cobertura TV",
                            color='Correla√ß√£o',
                            color_continuous_scale=['red', 'yellow', 'green'])
                st.plotly_chart(fig, use_container_width=True)
                
                # Identificar plataforma com maior impacto
                best_platform = df_corrs.loc[df_corrs['Correla√ß√£o'].idxmax()]
                if best_platform['Correla√ß√£o'] > 0.2:
                    st.success(f"**{best_platform['Plataforma']} √© a plataforma com maior impacto positivo na cobertura TV (r = {best_platform['Correla√ß√£o']:.2f})**")
                    st.markdown(f"""
                    **An√°lise por plataforma:**
                    
                    Entre todas as plataformas sociais, **{best_platform['Plataforma']}** demonstra o maior impacto 
                    positivo na cobertura da TV Linear, com correla√ß√£o de **{best_platform['Correla√ß√£o']:.2f}**.
                    
                    **Implica√ß√µes pr√°ticas:**
                    - Priorizar publica√ß√µes no {best_platform['Plataforma']} para promover conte√∫do da TV Linear
                    - Avaliar caracter√≠sticas espec√≠ficas do conte√∫do nesta plataforma que geram maior engajamento
                    - Considerar aumentar investimento em conte√∫do para {best_platform['Plataforma']}
                    
                    Esta diferen√ßa de efic√°cia entre plataformas pode estar relacionada ao perfil demogr√°fico dos usu√°rios,
                    ao formato do conte√∫do ou √†s caracter√≠sticas espec√≠ficas de consumo em cada plataforma.
                    """)
                else:
                    st.info("**Nenhuma plataforma demonstra impacto significativo positivo na cobertura TV**")
                    st.markdown("""
                    **An√°lise por plataforma:**
                    
                    Nenhuma plataforma social demonstra um impacto significativamente positivo na cobertura da TV Linear.
                    Isso sugere que os posts em redes sociais atualmente n√£o est√£o funcionando efetivamente como "chamariz"
                    para a TV.
                    
                    **Poss√≠veis raz√µes:**
                    - Desconex√£o entre o conte√∫do publicado e a programa√ß√£o da TV
                    - Audi√™ncias distintas entre redes sociais e TV Linear
                    - Falta de chamadas para a√ß√£o efetivas direcionando para a TV
                    
                    Recomenda-se revisar a estrat√©gia de conte√∫do social para criar pontes mais efetivas
                    com a programa√ß√£o de TV.
                    """)
            
            # Novas gera√ß√µes - an√°lise por hor√°rio (proxy)
            df['hora'] = pd.to_datetime(df['data_hora']).dt.hour
            # Hor√°rios com maior presen√ßa de p√∫blico jovem (19h-23h)
            df['horario_jovem'] = df['hora'].between(19, 23)
            
            df_horario = df.groupby('horario_jovem').agg({
                'total_posts': 'mean',
                'LINEAR_GLOBO_cov%': 'mean'
            }).reset_index()
            
            st.subheader("Impacto de posts em hor√°rios com p√∫blico mais jovem")
            st.write(df_horario)
            
            if len(df_horario) > 1:
                impact_diff = ((df_horario.loc[df_horario['horario_jovem']==True, 'LINEAR_GLOBO_cov%'].values[0] /
                             df_horario.loc[df_horario['horario_jovem']==False, 'LINEAR_GLOBO_cov%'].values[0]) - 1) * 100
                
                if impact_diff > 5:
                    st.success(f"**Em hor√°rios com maior presen√ßa de p√∫blico jovem, a cobertura TV √© {impact_diff:.1f}% maior**")
                    st.markdown(f"""
                    **An√°lise para p√∫blicos jovens:**
                    
                    A cobertura da TV Linear durante hor√°rios com maior presen√ßa de p√∫blico jovem (19h-23h) √© 
                    **{impact_diff:.1f}% maior** comparada a outros hor√°rios. Isso sugere que o p√∫blico jovem 
                    est√° efetivamente consumindo conte√∫do de TV Linear, especialmente no hor√°rio nobre.
                    
                    **Implica√ß√µes:**
                    - A percep√ß√£o de que jovens n√£o consomem TV Linear pode estar equivocada
                    - O hor√°rio nobre continua sendo relevante para novas gera√ß√µes
                    - Estrat√©gias espec√≠ficas para este hor√°rio podem ter maior impacto no p√∫blico jovem
                    """)
                elif impact_diff < -5:
                    st.error(f"**Em hor√°rios com maior presen√ßa de p√∫blico jovem, a cobertura TV √© {abs(impact_diff):.1f}% menor**")
                    st.markdown(f"""
                    **An√°lise para p√∫blicos jovens:**
                    
                    A cobertura da TV Linear durante hor√°rios com maior presen√ßa de p√∫blico jovem (19h-23h) √© 
                    **{abs(impact_diff):.1f}% menor** comparada a outros hor√°rios. Isso confirma a tend√™ncia de 
                    menor consumo de TV Linear entre as novas gera√ß√µes.
                    
                    **Implica√ß√µes:**
                    - Estrat√©gias espec√≠ficas para atrair p√∫blico jovem para a TV Linear s√£o necess√°rias
                    - Considerar formatos e conte√∫dos que ressoem mais com novas gera√ß√µes
                    - Avaliar plataformas digitais como principal canal para alcan√ßar este p√∫blico
                    """)
                else:
                    st.info("**N√£o h√° diferen√ßa significativa na cobertura TV em hor√°rios com maior presen√ßa de p√∫blico jovem**")
                    st.markdown("""
                    **An√°lise para p√∫blicos jovens:**
                    
                    N√£o h√° diferen√ßa significativa na cobertura da TV Linear entre hor√°rios com maior presen√ßa 
                    de p√∫blico jovem (19h-23h) e outros hor√°rios. Isso sugere que o padr√£o de consumo pode estar 
                    mais relacionado ao tipo de conte√∫do do que ao hor√°rio em si.
                    
                    **Implica√ß√µes:**
                    - Focar na qualidade e relev√¢ncia do conte√∫do independentemente do hor√°rio
                    - Investigar outros fatores que possam influenciar o consumo entre novas gera√ß√µes
                    - Considerar estrat√©gias mais granulares baseadas em interesses espec√≠ficos e n√£o apenas hor√°rio
                    """)
        
        # 2.2 Os sites (G1, GE e GShow) s√£o complementares, sendo usados como segunda tela da TV linear?
        st.subheader("2.2 Os sites (G1, GE e GShow) s√£o complementares, sendo usados como segunda tela da TV linear?")
        
        st.markdown("""
        Esta an√°lise investiga se os sites da Globo (G1, GE e GShow) s√£o utilizados como "segunda tela"
        durante o consumo de TV Linear. Uma "segunda tela" refere-se ao uso de um dispositivo digital
        simultaneamente √† TV, complementando a experi√™ncia.
        
        **Metodologia:**
        - Analisamos a correla√ß√£o entre intera√ß√µes nos sites e rating TV por hora do dia
        - Focamos especialmente em hor√°rios de maior audi√™ncia TV (hor√°rio nobre)
        - Comparamos o comportamento entre diferentes sites
        
        **Como interpretar:**
        - Correla√ß√£o alta em hor√°rio nobre: indica uso como segunda tela
        - Varia√ß√µes entre sites: revelam quais portais t√™m maior sinergia com a TV
        - Padr√µes distintos ao longo do dia: mostram momentos de uso complementar
        """)
        
        # Identificar colunas relacionadas aos sites
        site_cols = [col for col in rs_cols if any(site in col for site in ['g1', 'ge', 'Gshow'])]
        
        if site_cols and 'LINEAR_GLOBO_rat%' in df.columns:
            # Identificar m√©tricas de intera√ß√£o nos sites
            site_interactions = [col for col in site_cols if 'interacoes' in col]
            
            # An√°lise por hora do dia para detectar uso de segunda tela
            df['hora'] = pd.to_datetime(df['data_hora']).dt.hour
            
            # Para cada site, calcular correla√ß√£o por hora
            sites = ['g1', 'ge', 'Gshow']
            hora_prime = list(range(19, 23))  # Hor√°rio nobre
            
            results = []
            for site in sites:
                site_cols_filtered = [col for col in site_interactions if site in col]
                if site_cols_filtered:
                    df[f'{site}_interactions'] = df[site_cols_filtered].sum(axis=1)
                    
                    for hora in range(24):
                        df_hora = df[df['hora'] == hora]
                        if len(df_hora) > 5:  # Garantir dados suficientes
                            corr = df_hora[f'{site}_interactions'].corr(df_hora['LINEAR_GLOBO_rat%'])
                            is_prime = hora in hora_prime
                            results.append({
                                'Site': site,
                                'Hora': hora,
                                'Correla√ß√£o': corr,
                                'Prime': is_prime
                            })
            
            if results:
                df_results = pd.DataFrame(results)
                
                # Plot de correla√ß√£o hora a hora por site
                fig = px.line(df_results, x='Hora', y='Correla√ß√£o', color='Site',
                            title="Correla√ß√£o entre intera√ß√µes nos sites e rating TV por hora",
                            labels={'Correla√ß√£o': 'Correla√ß√£o com Rating TV'},
                            line_shape='spline')
                
                # Adicionar faixa para hor√°rio nobre
                fig.add_vrect(x0=19, x1=23, 
                            fillcolor="LightSalmon", opacity=0.2,
                            layer="below", line_width=0,
                            annotation_text="Hor√°rio Nobre")
                
                st.plotly_chart(fig, use_container_width=True)
                
                st.markdown("""
                **Interpreta√ß√£o do uso como segunda tela:**
                
                O gr√°fico acima mostra como a correla√ß√£o entre intera√ß√µes nos sites e o rating da TV Linear
                varia ao longo do dia. As √°reas destacadas correspondem ao hor√°rio nobre (19h-23h), quando
                a audi√™ncia da TV tende a ser maior.
                
                **O que procurar no gr√°fico:**
                - **Picos durante o hor√°rio nobre:** Indicam uso como segunda tela durante programas de alta audi√™ncia
                - **Diferen√ßas entre sites:** Revelam qual portal tem maior sinergia com a programa√ß√£o da TV
                - **Varia√ß√µes ao longo do dia:** Mostram como o comportamento muda em diferentes momentos
                
                Correla√ß√µes positivas fortes durante o hor√°rio nobre sugerem que os usu√°rios est√£o consumindo
                conte√∫do no site enquanto assistem TV, caracterizando o comportamento de segunda tela.
                """)
                
                # An√°lise autom√°tica
                prime_corrs = df_results[df_results['Prime'] == True].groupby('Site')['Correla√ß√£o'].mean()
                non_prime_corrs = df_results[df_results['Prime'] == False].groupby('Site')['Correla√ß√£o'].mean()
                
                for site in prime_corrs.index:
                    if site in non_prime_corrs.index:
                        prime_corr = prime_corrs[site]
                        non_prime_corr = non_prime_corrs[site]
                        
                        if prime_corr > 0.3 and prime_corr > non_prime_corr:
                            st.success(f"**{site} apresenta forte ind√≠cio de uso como segunda tela durante o hor√°rio nobre (r = {prime_corr:.2f})**")
                            st.markdown(f"""
                            **An√°lise detalhada - {site}:**
                            
                            O portal **{site}** mostra uma correla√ß√£o significativa de **{prime_corr:.2f}** com o rating TV
                            durante o hor√°rio nobre, substancialmente maior que nos outros hor√°rios ({non_prime_corr:.2f}).
                            Isso √© uma forte evid√™ncia de uso como segunda tela.
                            
                            **Comportamento do usu√°rio:**
                            - Os espectadores provavelmente buscam informa√ß√µes complementares sobre o conte√∫do que est√£o assistindo
                            - O site serve como extens√£o da experi√™ncia de TV, aprofundando temas abordados na programa√ß√£o
                            - Existe uma sinergia natural entre o conte√∫do da TV e o portal {site}
                            
                            **Recomenda√ß√£o:** Explorar ainda mais essa sinergia com conte√∫dos espec√≠ficos para segunda tela
                            durante programas de alta audi√™ncia, criando uma experi√™ncia mais imersiva.
                            """)
                        elif prime_corr > 0.15:
                            st.info(f"**{site} apresenta ind√≠cio moderado de uso como segunda tela (r = {prime_corr:.2f})**")
                            st.markdown(f"""
                            **An√°lise detalhada - {site}:**
                            
                            O portal **{site}** mostra uma correla√ß√£o moderada de **{prime_corr:.2f}** com o rating TV
                            durante o hor√°rio nobre. Isso sugere algum uso como segunda tela, mas o comportamento
                            n√£o √© t√£o pronunciado.
                            
                            **Poss√≠veis raz√µes:**
                            - O conte√∫do do site pode n√£o estar totalmente alinhado com a programa√ß√£o TV do momento
                            - Os usu√°rios podem estar dividindo aten√ß√£o entre m√∫ltiplas plataformas, n√£o apenas TV e site
                            - Pode haver oportunidades n√£o exploradas para criar mais conex√µes entre conte√∫dos
                            
                            **Recomenda√ß√£o:** Avaliar oportunidades para fortalecer a conex√£o entre o conte√∫do do site
                            e a programa√ß√£o de TV, especialmente em programas espec√≠ficos com maior potencial de sinergia.
                            """)
                        else:
                            st.warning(f"**{site} n√£o apresenta evid√™ncia forte de uso como segunda tela (r = {prime_corr:.2f})**")
                            st.markdown(f"""
                            **An√°lise detalhada - {site}:**
                            
                            O portal **{site}** mostra uma correla√ß√£o baixa de **{prime_corr:.2f}** com o rating TV,
                            sugerindo que n√£o est√° sendo significativamente utilizado como segunda tela durante o
                            consumo de TV Linear.
                            
                            **Poss√≠veis raz√µes:**
                            - O conte√∫do do site pode estar atendendo a interesses diferentes dos abordados na TV
                            - Os usu√°rios podem estar consumindo o site e a TV em momentos distintos
                            - Pode haver uma desconex√£o entre a estrat√©gia de conte√∫do do site e da TV
                            
                            **Recomenda√ß√£o:** Reavaliar a estrat√©gia de conte√∫do, buscando criar mais pontos de
                            contato com a programa√ß√£o TV ou aceitar que o site atende a necessidades diferentes
                            e desenvolver estrat√©gias independentes.
                            """)
        
        # 2.3 Social s√£o complementares, sendo usados como segunda tela da TV linear?
        st.subheader("2.3 Social (IG, TikTok, etc) s√£o complementares, sendo usados como segunda tela da TV linear?")
        
        st.markdown("""
        Esta an√°lise examina se as redes sociais funcionam como "segunda tela" durante o consumo
        de TV Linear, de maneira similar √† an√°lise anterior para os sites.
        
        **Metodologia:**
        - Analisamos a correla√ß√£o entre intera√ß√µes nas redes sociais e rating TV por hora
        - Focamos especialmente no hor√°rio nobre (19h-23h)
        - Comparamos o comportamento entre diferentes plataformas sociais
        
        **Como interpretar:**
        - Correla√ß√£o alta em hor√°rio nobre: indica uso complementar √† TV
        - Varia√ß√µes entre plataformas: revelam quais redes sociais t√™m maior sinergia com a TV
        - Padr√µes distintos ao longo do dia: mostram momentos de uso complementar
        """)
        
        platforms = ["FACEBOOK", "INSTAGRAM", "TIKTOK", "YOUTUBE"]
        
        # An√°lise similar √† anterior, mas focada nas plataformas sociais
        hora_prime = list(range(19, 23))  # Hor√°rio nobre
        results = []
        
        for platform in platforms:
            platform_cols = [col for col in rs_cols if platform in col and 'total_interactions' in col]
            if platform_cols:
                df[f'{platform}_total_interactions'] = df[platform_cols].sum(axis=1)
                
                for hora in range(24):
                    df_hora = df[df['hora'] == hora]
                    if len(df_hora) > 5:  # Garantir dados suficientes
                        corr = df_hora[f'{platform}_total_interactions'].corr(df_hora['LINEAR_GLOBO_rat%'])
                        is_prime = hora in hora_prime
                        results.append({
                            'Plataforma': platform,
                            'Hora': hora,
                            'Correla√ß√£o': corr,
                            'Prime': is_prime
                        })
        
        if results:
            df_results = pd.DataFrame(results)
            
            # Plot de correla√ß√£o hora a hora por plataforma
            fig = px.line(df_results, x='Hora', y='Correla√ß√£o', color='Plataforma',
                        title="Correla√ß√£o entre intera√ß√µes sociais e rating TV por hora",
                        labels={'Correla√ß√£o': 'Correla√ß√£o com Rating TV'},
                        line_shape='spline')
            
            # Adicionar faixa para hor√°rio nobre
            fig.add_vrect(x0=19, x1=23, 
                        fillcolor="LightSalmon", opacity=0.2,
                        layer="below", line_width=0,
                        annotation_text="Hor√°rio Nobre")
            
            st.plotly_chart(fig, use_container_width=True)
            
            st.markdown("""
            **Interpreta√ß√£o do uso de redes sociais como segunda tela:**
            
            O gr√°fico acima mostra como a correla√ß√£o entre intera√ß√µes nas redes sociais e o rating da TV Linear
            varia ao longo do dia. A √°rea destacada corresponde ao hor√°rio nobre (19h-23h), quando
            a audi√™ncia da TV tende a ser maior.
            
            **Padr√µes a observar:**
            - **Picos de correla√ß√£o:** Momentos onde h√° uso sincronizado de redes sociais e TV
            - **Quedas durante certos hor√°rios:** Podem indicar competi√ß√£o pela aten√ß√£o do usu√°rio
            - **Diferen√ßas entre plataformas:** Revelam quais redes t√™m maior sinergia com a TV
            
            Picos de correla√ß√£o positiva durante programas espec√≠ficos sugerem coment√°rios em tempo real
            sobre o conte√∫do, caracterizando o comportamento de "TV Social".
            """)
            
            # An√°lise por plataforma durante hor√°rio nobre
            df_prime = df_results[df_results['Prime'] == True].groupby('Plataforma')['Correla√ß√£o'].mean().reset_index()
            df_prime = df_prime.sort_values('Correla√ß√£o', ascending=False)
            
            fig = px.bar(df_prime, x='Plataforma', y='Correla√ß√£o',
                       title="Correla√ß√£o m√©dia das redes sociais com TV durante hor√°rio nobre",
                       color='Correla√ß√£o',
                       color_continuous_scale=['red', 'yellow', 'green'])
            
            st.plotly_chart(fig, use_container_width=True)
            
            # Identificar a melhor plataforma como segunda tela
            best_platform = df_prime.iloc[0]
            if best_platform['Correla√ß√£o'] > 0.3:
                st.success(f"**{best_platform['Plataforma']} mostra forte evid√™ncia de uso como segunda tela no hor√°rio nobre (r = {best_platform['Correla√ß√£o']:.2f})**")
                st.markdown(f"""
                **Destaque para {best_platform['Plataforma']}:**
                
                A plataforma **{best_platform['Plataforma']}** apresenta a correla√ß√£o mais forte (**{best_platform['Correla√ß√£o']:.2f}**) 
                com o rating TV durante o hor√°rio nobre, indicando um forte uso como segunda tela.
                
                **Caracter√≠sticas deste comportamento:**
                - Os espectadores provavelmente est√£o comentando em tempo real sobre os programas
                - A plataforma funciona como espa√ßo de discuss√£o e engajamento com o conte√∫do da TV
                - Existe um efeito de "TV Social" pronunciado nesta plataforma
                
                **Oportunidades:**
                - Desenvolver estrat√©gias espec√≠ficas para {best_platform['Plataforma']} que estimulem o engajamento durante programas de alta audi√™ncia
                - Considerar promo√ß√µes e hashtags espec√≠ficas para criar momentos virais durante a programa√ß√£o
                - Monitorar e participar das conversas em tempo real para fortalecer o engajamento
                """)
            elif best_platform['Correla√ß√£o'] > 0.15:
                st.info(f"**{best_platform['Plataforma']} mostra evid√™ncia moderada de uso como segunda tela (r = {best_platform['Correla√ß√£o']:.2f})**")
                st.markdown(f"""
                **An√°lise para {best_platform['Plataforma']}:**
                
                A plataforma **{best_platform['Plataforma']}** apresenta correla√ß√£o moderada (**{best_platform['Correla√ß√£o']:.2f}**) 
                com o rating TV durante o hor√°rio nobre, sugerindo algum uso como segunda tela, mas n√£o t√£o intenso.
                
                **Caracter√≠sticas deste comportamento:**
                - Alguns espectadores usam a plataforma enquanto assistem TV, mas n√£o √© um comportamento dominante
                - O engajamento pode estar concentrado em programas espec√≠ficos, n√£o em toda a programa√ß√£o
                - Existe potencial para aumentar a sinergia entre a plataforma e a TV
                
                **Recomenda√ß√£o:** Identificar quais tipos de programas geram maior engajamento simult√¢neo e focar
                estrat√©gias nesses momentos espec√≠ficos, fortalecendo gradualmente o comportamento de segunda tela.
                """)
            else:
                st.warning("**Nenhuma plataforma social mostra evid√™ncia forte de uso como segunda tela**")
                st.markdown("""
                **An√°lise geral das plataformas sociais:**
                
                Nenhuma plataforma social apresenta evid√™ncia forte de uso como segunda tela durante
                o consumo de TV Linear. Isso sugere que as redes sociais e a TV est√£o sendo consumidas
                em momentos distintos ou por p√∫blicos diferentes.
                
                **Poss√≠veis raz√µes:**
                - Fragmenta√ß√£o da aten√ß√£o: usu√°rios preferem dedicar aten√ß√£o total a uma tela por vez
                - Desconex√£o de conte√∫do: temas abordados nas redes podem n√£o estar alinhados com a programa√ß√£o TV
                - Comportamento geracional: diferentes grupos et√°rios podem ter prefer√™ncias distintas de consumo
                
                **Recomenda√ß√£o:** Considerar estrat√©gias que reconhe√ßam a separa√ß√£o entre os meios, focando
                em criar pontes de conte√∫do que possam transferir audi√™ncia de um para outro, em vez de
                assumir consumo simult√¢neo.
                """)
    else:
        st.warning("Dados insuficientes para realizar a an√°lise. √â necess√°rio ter m√©tricas de Redes Sociais (RS_) e TV Linear (LINEAR_).")

@st.cache_data
def analise_grandes_eventos(df):
    """
    An√°lise para responder perguntas sobre como os grandes eventos impactam a audi√™ncia.
    """
    st.header("Grandes eventos s√£o catalisadores de audi√™ncia e engajamento")
    
    st.markdown("""
    Esta an√°lise investiga como eventos significativos afetam a audi√™ncia da TV Linear e o engajamento
    nas redes sociais. O objetivo √© entender o poder dos grandes eventos como catalisadores de audi√™ncia
    e seu papel no "agendamento social" - quando conte√∫dos se tornam importantes momentos culturais compartilhados.
    
    Exploramos tr√™s quest√µes principais:
    1. O impacto da exclusividade de conte√∫dos vinculados a grandes eventos
    2. O efeito da temporalidade e relev√¢ncia de eventos no agendamento social
    3. A compara√ß√£o entre diferentes tipos de eventos e seu impacto na audi√™ncia
    """)
    
    # Verificar se temos dados sobre eventos externos
    eventos_cols = [col for col in df.columns if col.startswith('EXTERNO_') and col != 'EXTERNO_dolar' 
                    and col != 'EXTERNO_unemployment_rate' and col != 'EXTERNO_inflation_ipca'
                    and col != 'EXTERNO_selic_rate' and col != 'EXTERNO_indice_cond_economicas']
    
    if 'EXTERNO_FUTEBOL_CONCORRENTE_ON' in df.columns or eventos_cols:
        # 3.1 A exclusividade de conte√∫dos vinculados a grandes eventos fortalece o agendamento social?
        st.subheader("3.1 A exclusividade de conte√∫dos vinculados a grandes eventos fortalece o agendamento social?")
        
        st.markdown("""
        Esta an√°lise examina como eventos importantes, especialmente aqueles com car√°ter de exclusividade,
        impactam a audi√™ncia da TV Linear e o engajamento social. O agendamento social refere-se √† capacidade
        de um conte√∫do criar um "compromisso coletivo" para assistir em tempo real.
        
        **Metodologia:**
        - Comparamos audi√™ncia e engajamento durante eventos vs. per√≠odos regulares
        - Analisamos o impacto de eventos de futebol (um exemplo cl√°ssico de conte√∫do "ao vivo")
        - Medimos o efeito nas intera√ß√µes sociais durante estes eventos
        
        **Como interpretar:**
        - Aumento de rating durante eventos: indica poder de atra√ß√£o de audi√™ncia
        - Aumento de share: revela capacidade de dominar a aten√ß√£o dispon√≠vel
        - Picos de intera√ß√µes sociais: mostram o "efeito conversa√ß√£o" do evento
        """)
        
        # An√°lise de audi√™ncia durante eventos
        if 'EXTERNO_FUTEBOL_CONCORRENTE_ON' in df.columns:
            # Comparar audi√™ncia quando h√° futebol vs. quando n√£o h√°
            df_futebol = df.groupby('EXTERNO_FUTEBOL_CONCORRENTE_ON').agg({
                'LINEAR_GLOBO_rat%': 'mean',
                'LINEAR_GLOBO_shr%': 'mean',
                'RS_GLOBO_FACEBOOK_total_interactions': 'mean',
                'RS_GLOBO_INSTAGRAM_total_interactions': 'mean',
                'RS_GLOBO_TIKTOK_total_interactions': 'mean',
                'RS_GLOBO_YOUTUBE_total_interactions': 'mean'
            }).reset_index()
            
            df_futebol['EXTERNO_FUTEBOL_CONCORRENTE_ON'] = df_futebol['EXTERNO_FUTEBOL_CONCORRENTE_ON'].map({
                0: 'Sem Futebol',
                1: 'Com Futebol'
            })
            
            fig = px.bar(df_futebol, x='EXTERNO_FUTEBOL_CONCORRENTE_ON', 
                       y=['LINEAR_GLOBO_rat%', 'LINEAR_GLOBO_shr%'],
                       barmode='group',
                       title='Impacto de Eventos de Futebol na Audi√™ncia da TV Linear',
                       labels={'value': 'Valor M√©dio (%)', 
                              'EXTERNO_FUTEBOL_CONCORRENTE_ON': '', 
                              'variable': 'M√©trica'})
            
            st.plotly_chart(fig, use_container_width=True)
            
            st.markdown("""
            **Interpreta√ß√£o do impacto de eventos de futebol:**
            
            O gr√°fico acima compara o rating (% da popula√ß√£o total assistindo) e o share (% das TVs ligadas
            sintonizadas no canal) durante per√≠odos com e sem eventos de futebol.
            
            **O que analisar:**
            - **Diferen√ßa no Rating:** Mostra a capacidade do evento atrair audi√™ncia adicional
            - **Diferen√ßa no Share:** Revela a capacidade do evento capturar a aten√ß√£o dispon√≠vel
            - **Compara√ß√£o entre as m√©tricas:** Uma diferen√ßa maior no share que no rating sugere que o evento redistribui a audi√™ncia existente mais do que atrai novos espectadores
            
            Eventos de futebol s√£o um exemplo cl√°ssico de conte√∫do "ao vivo" com alto potencial de agendamento social.
            """)
            
            # Impacto nas redes sociais
            social_cols = [col for col in df_futebol.columns if 'total_interactions' in col]
            if social_cols:
                df_social = df_futebol.melt(
                    id_vars=['EXTERNO_FUTEBOL_CONCORRENTE_ON'],
                    value_vars=social_cols,
                    var_name='Plataforma',
                    value_name='Intera√ß√µes'
                )
                
                # Extrair nome da plataforma da coluna
                df_social['Plataforma'] = df_social['Plataforma'].str.extract(r'RS_GLOBO_(\w+)_total')
                
                fig = px.bar(df_social, x='EXTERNO_FUTEBOL_CONCORRENTE_ON', y='Intera√ß√µes',
                           color='Plataforma', barmode='group',
                           title='Impacto de Eventos de Futebol nas Intera√ß√µes em Redes Sociais',
                           labels={'EXTERNO_FUTEBOL_CONCORRENTE_ON': ''})
                
                st.plotly_chart(fig, use_container_width=True)
                
                st.markdown("""
                **Interpreta√ß√£o do impacto social dos eventos:**
                
                O gr√°fico acima mostra como as intera√ß√µes nas redes sociais variam durante eventos de futebol
                comparados a per√≠odos regulares. Este √© um indicador importante do "efeito conversa√ß√£o" que
                grandes eventos podem gerar.
                
                **O que observar:**
                - **Aumento de intera√ß√µes durante eventos:** Indica que o conte√∫do est√° gerando conversa√ß√£o
                - **Varia√ß√£o entre plataformas:** Revela quais redes sociais s√£o mais responsivas a eventos
                - **Propor√ß√£o do aumento:** Quantifica o poder do evento como catalisador de engajamento
                
                Um aumento significativo nas intera√ß√µes sociais durante eventos confirma seu papel como
                aglutinadores de aten√ß√£o coletiva e momentos culturais compartilhados.
                """)
                
                # An√°lise autom√°tica
                with_football = df_futebol[df_futebol['EXTERNO_FUTEBOL_CONCORRENTE_ON'] == 'Com Futebol']
                without_football = df_futebol[df_futebol['EXTERNO_FUTEBOL_CONCORRENTE_ON'] == 'Sem Futebol']
                
                if len(with_football) > 0 and len(without_football) > 0:
                    rating_diff = ((with_football['LINEAR_GLOBO_rat%'].values[0] / 
                                  without_football['LINEAR_GLOBO_rat%'].values[0]) - 1) * 100
                    
                    if rating_diff > 10:
                        st.success(f"**Durante eventos de futebol, o rating da TV Linear √© {rating_diff:.1f}% maior**")
                        st.markdown(f"""
                        **Conclus√£o sobre o poder dos eventos:**
                        
                        Os dados mostram um impacto muito significativo dos eventos de futebol na audi√™ncia,
                        com um aumento de **{rating_diff:.1f}%** no rating durante estes eventos.
                        
                        Este resultado confirma que conte√∫dos exclusivos e eventos importantes funcionam como
                        poderosos catalisadores de audi√™ncia, criando momentos de "compromisso coletivo" para
                        assistir em tempo real - o verdadeiro agendamento social.
                        
                        **Implica√ß√µes estrat√©gicas:**
                        - Priorizar aquisi√ß√£o de direitos exclusivos para eventos de alto impacto
                        - Criar estrat√©gias de promo√ß√£o que amplifiquem o sentido de "momento imperd√≠vel"
                        - Desenvolver conte√∫dos complementares que estendam a experi√™ncia do evento
                        """)
                    elif rating_diff < -10:
                        st.error(f"**Durante eventos de futebol, o rating da TV Linear √© {abs(rating_diff):.1f}% menor**")
                        st.markdown(f"""
                        **Conclus√£o sobre competi√ß√£o por eventos:**
                        
                        Os dados mostram que durante eventos de futebol, a audi√™ncia da TV Linear cai
                        **{abs(rating_diff):.1f}%**. Isso sugere que eventos concorrentes (possivelmente
                        transmitidos em outros canais) est√£o atraindo a audi√™ncia.
                        
                        **Implica√ß√µes estrat√©gicas:**
                        - Avaliar a estrat√©gia de programa√ß√£o durante eventos concorrentes
                        - Considerar contra-programa√ß√£o espec√≠fica que atraia p√∫blicos diferentes
                        - Analisar a possibilidade de adquirir direitos para os eventos de maior impacto
                        """)
                    else:
                        st.info("**Eventos de futebol n√£o mostram impacto significativo no rating da TV Linear**")
                        st.markdown(f"""
                        **Conclus√£o sobre o impacto dos eventos:**
                        
                        Os dados mostram que eventos de futebol n√£o t√™m um impacto significativo no rating
                        da TV Linear (varia√ß√£o de apenas {rating_diff:.1f}%). Isso sugere que:
                        
                        - O p√∫blico da TV Linear pode ter pouca sobreposi√ß√£o com f√£s de futebol
                        - A programa√ß√£o regular tem poder de reten√ß√£o similar aos eventos
                        - Outros fatores podem estar influenciando mais a audi√™ncia que os eventos
                        
                        **Recomenda√ß√£o:** Focar na qualidade e consist√™ncia da programa√ß√£o regular, que parece 
                        ter poder de atra√ß√£o similar aos eventos especiais para o p√∫blico atual.
                        """)
        
        # 3.2 A temporalidade e relev√¢ncia de eventos impulsionam o agendamento social?
        st.subheader("3.2 A temporalidade e relev√¢ncia de eventos impulsionam o agendamento social?")
        
        st.markdown("""
        Esta an√°lise examina como diferentes tipos de eventos afetam a audi√™ncia e o engajamento social,
        buscando entender quais caracter√≠sticas tornam um evento mais poderoso como catalisador.
        
        **Metodologia:**
        - Comparamos o impacto de diferentes eventos externos na audi√™ncia TV
        - Medimos tanto o efeito no rating quanto no engajamento social
        - Analisamos a correla√ß√£o entre impacto na audi√™ncia e nas redes sociais
        
        **Como interpretar:**
        - Varia√ß√£o no impacto entre eventos: revela quais caracter√≠sticas s√£o mais relevantes
        - Correla√ß√£o entre rating e engajamento: mostra se o impacto √© consistente em ambos os meios
        - Eventos de maior efeito: oferecem insights sobre o que gera maior agendamento social
        """)
        
        # Analisar outros eventos externos, se dispon√≠veis
        if eventos_cols:
            # Criar dataframe com m√©dia de audi√™ncia e engajamento para cada evento
            event_results = []
            
            for event_col in eventos_cols:
                event_name = event_col.replace('EXTERNO_', '')
                
                event_data = df.groupby(event_col).agg({
                    'LINEAR_GLOBO_rat%': 'mean',
                    'LINEAR_GLOBO_shr%': 'mean',
                    'RS_GLOBO_INSTAGRAM_total_interactions': 'mean',
                    'RS_GLOBO_FACEBOOK_total_interactions': 'mean'
                }).reset_index()
                
                if len(event_data) > 1:  # Garantir que temos tanto 0 quanto 1
                    with_event = event_data[event_data[event_col] == 1]
                    without_event = event_data[event_data[event_col] == 0]
                    
                    if len(with_event) > 0 and len(without_event) > 0:
                        rating_impact = (with_event['LINEAR_GLOBO_rat%'].values[0] / 
                                      without_event['LINEAR_GLOBO_rat%'].values[0] - 1) * 100
                        
                        social_cols = [col for col in event_data.columns if 'total_interactions' in col]
                        social_impact = 0
                        
                        if social_cols:
                            social_impacts = [(with_event[col].values[0] / 
                                            without_event[col].values[0] - 1) * 100 
                                           for col in social_cols]
                            social_impact = sum(social_impacts) / len(social_impacts)
                        
                        event_results.append({
                            'Evento': event_name,
                            'Impacto Rating (%)': rating_impact,
                            'Impacto Social (%)': social_impact
                        })
            
            if event_results:
                df_events = pd.DataFrame(event_results)
                
                # Ordenar por impacto no rating
                df_events = df_events.sort_values('Impacto Rating (%)', ascending=False)
                
                # Visualizar impacto dos eventos
                fig = px.bar(df_events, x='Evento', y=['Impacto Rating (%)', 'Impacto Social (%)'],
                           barmode='group',
                           title='Impacto de Diferentes Eventos na Audi√™ncia e Engajamento Social',
                           labels={'value': 'Impacto (%)', 'variable': 'Tipo de Impacto'})
                
                st.plotly_chart(fig, use_container_width=True)
                
                st.markdown("""
                **Interpreta√ß√£o do impacto comparativo entre eventos:**
                
                O gr√°fico acima compara o impacto percentual de diferentes eventos tanto na audi√™ncia da TV Linear
                (Rating) quanto no engajamento em redes sociais.
                
                **O que observar:**
                - **Varia√ß√£o entre eventos:** Alguns eventos t√™m impacto muito maior que outros
                - **Diferen√ßa entre rating e social:** Certos eventos podem afetar mais um meio que outro
                - **Eventos de maior impacto:** Suas caracter√≠sticas podem revelar o que gera maior agendamento social
                
                Esta an√°lise comparativa √© fundamental para identificar quais tipos de conte√∫do t√™m maior poder
                de atra√ß√£o e engajamento, orientando decis√µes de programa√ß√£o e investimento.
                """)
                
                # Identificar eventos com maior impacto
                top_rating_event = df_events.iloc[0]
                top_social_event = df_events.sort_values('Impacto Social (%)', ascending=False).iloc[0]
                
                st.subheader("Eventos com maior impacto:")
                
                col1, col2 = st.columns(2)
                with col1:
                    st.metric("Maior impacto no Rating TV", 
                             top_rating_event['Evento'],
                             f"{top_rating_event['Impacto Rating (%)']:.1f}%")
                
                with col2:
                    st.metric("Maior impacto no Engajamento Social", 
                             top_social_event['Evento'],
                             f"{top_social_event['Impacto Social (%)']:.1f}%")
                
                # Correla√ß√£o entre impacto no rating e impacto social
                corr = df_events['Impacto Rating (%)'].corr(df_events['Impacto Social (%)'])
                
                if abs(corr) > 0.7:
                    st.success(f"**H√° uma forte correla√ß√£o ({corr:.2f}) entre o impacto de eventos no rating TV e nas redes sociais**")
                    st.markdown(f"""
                    **An√°lise de correla√ß√£o entre impactos:**
                    
                    Existe uma correla√ß√£o forte ({corr:.2f}) entre o impacto dos eventos na audi√™ncia TV
                    e no engajamento social. Isso indica que os eventos que atraem mais espectadores tamb√©m
                    geram mais conversa√ß√£o nas redes sociais.
                    
                    **Implica√ß√µes:**
                    - Eventos que geram alto agendamento social beneficiam ambos os meios
                    - A audi√™ncia TV e o engajamento social se refor√ßam mutuamente
                    - Estrat√©gias integradas que promovam ambos os meios t√™m maior potencial de sucesso
                    
                    Esta sinergia sugere que investir em eventos de alto impacto traz benef√≠cios amplificados
                    atrav√©s do efeito combinado na TV e nas redes sociais.
                    """)
                elif abs(corr) > 0.3:
                    st.info(f"**H√° uma correla√ß√£o moderada ({corr:.2f}) entre o impacto de eventos no rating TV e nas redes sociais**")
                    st.markdown(f"""
                    **An√°lise de correla√ß√£o entre impactos:**
                    
                    Existe uma correla√ß√£o moderada ({corr:.2f}) entre o impacto dos eventos na audi√™ncia TV
                    e no engajamento social. Isso sugere que h√° alguma rela√ß√£o, mas tamb√©m diferen√ßas importantes
                    no modo como os eventos afetam cada meio.
                    
                    **Implica√ß√µes:**
                    - Alguns eventos podem ser mais "feitos para TV" enquanto outros s√£o mais "viraliz√°veis"
                    - √â importante analisar as caracter√≠sticas espec√≠ficas que fazem um evento performar melhor em cada canal
                    - Estrat√©gias personalizadas para cada meio podem ser necess√°rias para maximizar o impacto
                    """)
                else:
                    st.warning(f"**N√£o h√° correla√ß√£o significativa ({corr:.2f}) entre o impacto de eventos no rating TV e nas redes sociais**")
                    st.markdown(f"""
                    **An√°lise de correla√ß√£o entre impactos:**
                    
                    A correla√ß√£o fraca ({corr:.2f}) entre impacto na TV e nas redes sociais sugere que
                    estes meios respondem a caracter√≠sticas diferentes dos eventos. Um evento que gera
                    alta audi√™ncia TV n√£o necessariamente gera alto engajamento social, e vice-versa.
                    
                    **Implica√ß√µes:**
                    - TV e redes sociais atendem a p√∫blicos com interesses distintos
                    - √â essencial entender as caracter√≠sticas espec√≠ficas que funcionam em cada meio
                    - Estrat√©gias separadas para TV e redes sociais podem ser mais eficazes que uma abordagem √∫nica
                    
                    Esta distin√ß√£o sugere a necessidade de uma an√°lise mais granular para identificar
                    os fatores de sucesso espec√≠ficos para cada plataforma.
                    """)
        
        # 3.3 Alguns eventos t√™m um impacto maior do que outros na TV linear?
        st.subheader("3.3 Alguns eventos de algumas verticais de conte√∫do t√™m um impacto maior do que outros na TV linear?")
        
        st.markdown("""
        Esta an√°lise compara o impacto de diferentes categorias de eventos na audi√™ncia da TV Linear,
        buscando identificar quais verticais de conte√∫do t√™m maior poder de atra√ß√£o.
        
        **Metodologia:**
        - Agrupamos eventos em categorias (Esportes, Entretenimento, Not√≠cias, etc.)
        - Calculamos o impacto m√©dio de cada categoria na audi√™ncia
        - Comparamos o efeito no rating e no share por categoria
        
        **Como interpretar:**
        - Diferen√ßas entre categorias: revelam quais verticais t√™m maior impacto
        - Impacto no rating vs. share: mostra capacidade de atrair novos espectadores vs. redistribuir audi√™ncia
        - N√∫mero de eventos por categoria: indica consist√™ncia do impacto
        """)
        
        if 'EXTERNO_FUTEBOL_CONCORRENTE_ON' in df.columns and eventos_cols:
            # Separar eventos por categoria (se poss√≠vel identificar)
            eventos_categorias = {}
            for event_col in eventos_cols:
                event_name = event_col.replace('EXTERNO_', '')
                
                # Tentar classificar eventos em categorias
                if 'FUTEBOL' in event_name or 'COPA' in event_name or 'CAMPEONATO' in event_name:
                    categoria = 'Esportes'
                elif 'CARNAVAL' in event_name or 'FESTIVAL' in event_name or 'SHOW' in event_name:
                    categoria = 'Entretenimento'
                elif 'ELEICAO' in event_name or 'POLITICA' in event_name:
                    categoria = 'Not√≠cias'
                else:
                    categoria = 'Outros'
                
                if categoria not in eventos_categorias:
                    eventos_categorias[categoria] = []
                
                eventos_categorias[categoria].append(event_col)
            
            # Calcular impacto m√©dio por categoria
            category_results = []
            
            for categoria, events in eventos_categorias.items():
                if events:
                    # Criar uma coluna que indica se qualquer evento da categoria est√° ocorrendo
                    df[f'categoria_{categoria}'] = df[events].max(axis=1)
                    
                    # Calcular m√©tricas por categoria
                    cat_data = df.groupby(f'categoria_{categoria}').agg({
                        'LINEAR_GLOBO_rat%': 'mean',
                        'LINEAR_GLOBO_shr%': 'mean'
                    }).reset_index()
                    
                    if len(cat_data) > 1:  # Garantir que temos tanto 0 quanto 1
                        with_cat = cat_data[cat_data[f'categoria_{categoria}'] == 1]
                        without_cat = cat_data[cat_data[f'categoria_{categoria}'] == 0]
                        
                        if len(with_cat) > 0 and len(without_cat) > 0:
                            rating_impact = (with_cat['LINEAR_GLOBO_rat%'].values[0] / 
                                          without_cat['LINEAR_GLOBO_rat%'].values[0] - 1) * 100
                            
                            share_impact = (with_cat['LINEAR_GLOBO_shr%'].values[0] / 
                                          without_cat['LINEAR_GLOBO_shr%'].values[0] - 1) * 100
                            
                            category_results.append({
                                'Categoria': categoria,
                                'Impacto Rating (%)': rating_impact,
                                'Impacto Share (%)': share_impact,
                                'N√∫mero de Eventos': len(events)
                            })
            
            if category_results:
                df_categories = pd.DataFrame(category_results)
                
                # Ordenar por impacto no rating
                df_categories = df_categories.sort_values('Impacto Rating (%)', ascending=False)
                
                # Visualizar impacto por categoria
                fig = px.bar(df_categories, x='Categoria', y=['Impacto Rating (%)', 'Impacto Share (%)'],
                           barmode='group',
                           title='Impacto de Categorias de Eventos na TV Linear',
                           labels={'value': 'Impacto (%)', 'variable': 'Tipo de Impacto'})
                
                st.plotly_chart(fig, use_container_width=True)
                
                st.markdown("""
                **Interpreta√ß√£o do impacto por categoria de evento:**
                
                O gr√°fico acima compara o impacto percentual de diferentes categorias de eventos na audi√™ncia da TV Linear,
                tanto em termos de rating (% da popula√ß√£o assistindo) quanto de share (% das TVs ligadas sintonizadas no canal).
                
                **O que observar:**
                - **Varia√ß√£o entre categorias:** Algumas verticais de conte√∫do t√™m impacto muito maior que outras
                - **Diferen√ßa entre rating e share:** Indica se a categoria atrai novos espectadores ou apenas redistribui a audi√™ncia
                - **Impacto proporcional ao n√∫mero de eventos:** Revela consist√™ncia do efeito dentro da categoria
                
                Esta an√°lise por categoria √© fundamental para decis√µes estrat√©gicas sobre aquisi√ß√£o de direitos
                e investimento em diferentes verticais de conte√∫do.
                """)
                
                # An√°lise autom√°tica
                st.subheader("Conclus√µes sobre impacto de categorias de eventos:")
                
                for i, row in df_categories.iterrows():
                    categoria = row['Categoria']
                    rating_impact = row['Impacto Rating (%)']
                    num_events = row['N√∫mero de Eventos']
                    
                    if rating_impact > 15:
                        st.success(f"**{categoria}: Impacto muito alto na audi√™ncia (+{rating_impact:.1f}%)**")
                        st.markdown(f"""
                        **An√°lise detalhada - {categoria}:**
                        
                        Eventos da categoria **{categoria}** t√™m um impacto excepcional de **+{rating_impact:.1f}%** 
                        na audi√™ncia da TV Linear, baseado em {num_events} eventos analisados.
                        
                        **Caracter√≠sticas potenciais de sucesso:**
                        - Alto valor de "exclusividade" e temporalidade
                        - Forte componente social/cultural compartilhado
                        - Conte√∫do que beneficia da experi√™ncia "ao vivo"
                        
                        **Recomenda√ß√£o:** Priorizar aquisi√ß√£o de direitos e investimento em eventos desta categoria,
                        com foco em maximizar seu impacto atrav√©s de promo√ß√£o antecipada e cobertura extensiva.
                        """)
                    elif rating_impact > 5:
                        st.info(f"**{categoria}: Impacto moderado na audi√™ncia (+{rating_impact:.1f}%)**")
                        st.markdown(f"""
                        **An√°lise detalhada - {categoria}:**
                        
                        Eventos da categoria **{categoria}** t√™m um impacto positivo de **+{rating_impact:.1f}%** 
                        na audi√™ncia da TV Linear, baseado em {num_events} eventos analisados.
                        
                        **Caracter√≠sticas potenciais:**
                        - Valor moderado de "compromisso" para assistir em tempo real
                        - Algum componente social/cultural compartilhado
                        - Conte√∫do que beneficia da experi√™ncia conjunta
                        
                        **Recomenda√ß√£o:** Avaliar o custo-benef√≠cio destes eventos, identificando caracter√≠sticas espec√≠ficas
                        que possam amplificar seu impacto atrav√©s de estrat√©gias de programa√ß√£o e promo√ß√£o otimizadas.
                        """)
                    elif rating_impact < -5:
                        st.error(f"**{categoria}: Impacto negativo na audi√™ncia ({rating_impact:.1f}%)**")
                        st.markdown(f"""
                        **An√°lise detalhada - {categoria}:**
                        
                        Eventos da categoria **{categoria}** t√™m um impacto negativo de **{rating_impact:.1f}%** 
                        na audi√™ncia da TV Linear, baseado em {num_events} eventos analisados.
                        
                        **Poss√≠veis raz√µes:**
                        - Competi√ß√£o direta de outros canais transmitindo eventos similares
                        - P√∫blico-alvo diferente do perfil habitual da audi√™ncia do canal
                        - Falta de estrat√©gia eficaz de programa√ß√£o durante estes eventos
                        
                        **Recomenda√ß√£o:** Desenvolver estrat√©gia espec√≠fica de contra-programa√ß√£o durante eventos
                        desta categoria, ou considerar mudan√ßa de abordagem na cobertura destes eventos.
                        """)
                    else:
                        st.warning(f"**{categoria}: Impacto limitado na audi√™ncia ({rating_impact:.1f}%)**")
                        st.markdown(f"""
                        **An√°lise detalhada - {categoria}:**
                        
                        Eventos da categoria **{categoria}** t√™m impacto limitado de **{rating_impact:.1f}%** 
                        na audi√™ncia da TV Linear, baseado em {num_events} eventos analisados.
                        
                        **Poss√≠veis raz√µes:**
                        - Menor apelo de "assistir ao vivo" comparado a outras categorias
                        - Competi√ß√£o com outras formas de consumo deste tipo de conte√∫do
                        - Menor capacidade de criar "momentos culturais compartilhados"
                        
                        **Recomenda√ß√£o:** Avaliar o investimento nesta categoria com base em outros benef√≠cios
                        al√©m do impacto direto em audi√™ncia, como posicionamento de marca ou completude da oferta.
                        """)
    else:
        st.warning("Dados insuficientes para realizar a an√°lise. √â necess√°rio ter informa√ß√µes sobre eventos externos.")

@st.cache_data
def analise_fatores_externos(df):
    """
    An√°lise para responder perguntas sobre como fatores externos impactam a audi√™ncia.
    """
    st.header("Fatores externos impactam a nossa audi√™ncia da TV")
    
    st.markdown("""
    Esta an√°lise investiga como fatores econ√¥micos e externos influenciam o comportamento da audi√™ncia da TV.
    O objetivo √© entender como o ambiente macro afeta os padr√µes de consumo de m√≠dia, permitindo
    antecipar tend√™ncias e adaptar estrat√©gias.
    
    Exploramos duas quest√µes principais:
    1. O impacto de indicadores macroecon√¥micos (infla√ß√£o, desemprego, etc.) no consumo de entretenimento
    2. Como fatores ambientais e de mobilidade afetam os h√°bitos de consumo de TV
    """)
    
    # Verificar se temos dados econ√¥micos
    eco_cols = ['EXTERNO_dolar', 'EXTERNO_unemployment_rate', 'EXTERNO_inflation_ipca', 
                'EXTERNO_selic_rate', 'EXTERNO_indice_cond_economicas']
    
    eco_available = [col for col in eco_cols if col in df.columns]
    
    if eco_available:
        # 4.1 Dados macro-econ√¥micos podem explicar comportamentos de entretenimento?
        st.subheader("4.1 Dados macro-econ√¥micos podem explicar comportamentos de compra e gastos com entretenimento?")
        
        st.markdown("""
        Esta an√°lise examina como indicadores econ√¥micos (como desemprego, infla√ß√£o e taxa de juros)
        influenciam o consumo de m√≠dia, tanto em TV Linear quanto em streaming. A premissa √© que
        mudan√ßas econ√¥micas podem alterar os h√°bitos de entretenimento e gastos dom√©sticos.
        
        **Metodologia:**
        - Analisamos a correla√ß√£o entre indicadores econ√¥micos e m√©tricas de audi√™ncia
        - Comparamos o efeito em TV Linear vs. streaming (quando dispon√≠vel)
        - Examinamos tend√™ncias temporais de indicadores econ√¥micos e audi√™ncia
        
        **Como interpretar:**
        - Correla√ß√µes fortes: indicam que fatores econ√¥micos impactam significativamente o consumo de m√≠dia
        - Diferen√ßas entre TV e streaming: revelam poss√≠veis mudan√ßas de comportamento baseadas em custo
        - Tend√™ncias temporais: mostram como mudan√ßas econ√¥micas graduais afetam a audi√™ncia ao longo do tempo
        """)
        
        # Agrupar dados por dia para an√°lise econ√¥mica
        df['data_apenas'] = pd.to_datetime(df['data_hora']).dt.date
        df_diario = df.groupby('data_apenas').mean().reset_index()
        
        # Correla√ß√£o entre vari√°veis econ√¥micas e audi√™ncia/streaming
        correlation_vars = eco_available + ['LINEAR_GLOBO_rat%', 'LINEAR_GLOBO_shr%']
        
        # Adicionar vari√°veis de streaming se dispon√≠veis
        if 'GP_usu√°rios_assinantes_' in df.columns:
            correlation_vars.append('GP_usu√°rios_assinantes_')
        
        correlation_matrix = df_diario[correlation_vars].corr()
        
        # Visualizar matriz de correla√ß√£o
        fig = px.imshow(correlation_matrix,
                       text_auto=True,
                       color_continuous_scale='RdBu_r',
                       title='Correla√ß√£o entre Fatores Econ√¥micos e Audi√™ncia')
        
        st.plotly_chart(fig, use_container_width=True)
        
        st.markdown("""
        **Interpreta√ß√£o da matriz de correla√ß√£o:**
        
        O heatmap acima mostra as correla√ß√µes entre indicadores econ√¥micos e m√©tricas de audi√™ncia.
        Cores mais intensas indicam correla√ß√µes mais fortes, sendo azul para positivas e vermelho para negativas.
        
        **O que observar:**
        - **Correla√ß√µes com infla√ß√£o/desemprego:** Podem indicar como o custo de vida afeta o consumo de entretenimento
        - **Efeito da taxa de juros:** Pode estar relacionado √† disposi√ß√£o para gastos com assinaturas
        - **Varia√ß√µes entre TV Linear e streaming:** Revelam diferen√ßas na sensibilidade a fatores econ√¥micos
        
        Uma mudan√ßa nos padr√µes de correla√ß√£o pode sinalizar altera√ß√µes no comportamento do consumidor
        em resposta a condi√ß√µes econ√¥micas espec√≠ficas.
        """)
        
        # An√°lise detalhada por indicador econ√¥mico
        st.subheader("Impacto de indicadores econ√¥micos espec√≠ficos:")
        
        # Para cada indicador econ√¥mico, mostrar sua rela√ß√£o com audi√™ncia
        eco_analysis = []
        for eco_col in eco_available:
            # Extrair nome amig√°vel do indicador
            eco_name = eco_col.replace('EXTERNO_', '').replace('_', ' ').title()
            
            # Calcular correla√ß√£o com audi√™ncia
            corr_rating = df_diario[eco_col].corr(df_diario['LINEAR_GLOBO_rat%'])
            
            # Calcular correla√ß√£o com streaming (se dispon√≠vel)
            corr_streaming = None
            if 'GP_usu√°rios_assinantes_' in df_diario.columns:
                corr_streaming = df_diario[eco_col].corr(df_diario['GP_usu√°rios_assinantes_'])
            
            eco_analysis.append({
                'Indicador': eco_name,
                'Correla√ß√£o TV': corr_rating,
                'Correla√ß√£o Streaming': corr_streaming
            })
        
        df_eco = pd.DataFrame(eco_analysis)
        
        # Visualizar impacto dos indicadores
        fig = px.bar(df_eco, x='Indicador', y=['Correla√ß√£o TV', 'Correla√ß√£o Streaming'],
                   barmode='group',
                   title='Impacto de Indicadores Econ√¥micos na Audi√™ncia',
                   labels={'value': 'Correla√ß√£o', 'variable': 'Tipo de Audi√™ncia'})
        
        st.plotly_chart(fig, use_container_width=True)
        
        st.markdown("""
        **An√°lise comparativa dos indicadores econ√¥micos:**
        
        O gr√°fico acima compara como diferentes indicadores econ√¥micos se correlacionam com a audi√™ncia
        de TV Linear e streaming (quando dispon√≠vel).
        
        **Interpreta√ß√µes importantes:**
        - **Correla√ß√µes positivas:** Um aumento no indicador est√° associado a maior audi√™ncia
        - **Correla√ß√µes negativas:** Um aumento no indicador est√° associado a menor audi√™ncia
        - **Diferen√ßas entre TV e streaming:** Revelam poss√≠veis tend√™ncias de substitui√ß√£o ou complementaridade
        
        Esta an√°lise permite identificar quais indicadores econ√¥micos s√£o mais relevantes para prever
        comportamentos de audi√™ncia e adaptar estrat√©gias de acordo com mudan√ßas econ√¥micas.
        """)
        
        # An√°lise espec√≠fica para desemprego, infla√ß√£o e taxa de juros
        if 'EXTERNO_unemployment_rate' in df_diario.columns and 'LINEAR_GLOBO_rat%' in df_diario.columns:
            fig = px.scatter(df_diario, x='EXTERNO_unemployment_rate', y='LINEAR_GLOBO_rat%',
                           trendline="ols",
                           title='Rela√ß√£o entre Taxa de Desemprego e Audi√™ncia TV',
                           labels={'EXTERNO_unemployment_rate': 'Taxa de Desemprego (%)',
                                  'LINEAR_GLOBO_rat%': 'Rating TV (%)'})
            
            st.plotly_chart(fig, use_container_width=True)
            
            corr = df_diario['EXTERNO_unemployment_rate'].corr(df_diario['LINEAR_GLOBO_rat%'])
            
            if corr > 0.3:
                st.success(f"**H√° uma correla√ß√£o positiva significativa ({corr:.2f}) entre desemprego e audi√™ncia TV, sugerindo que em per√≠odos de maior desemprego as pessoas assistem mais TV**")
                st.markdown(f"""
                **An√°lise da rela√ß√£o desemprego-audi√™ncia:**
                
                Os dados mostram uma correla√ß√£o positiva significativa (**{corr:.2f}**) entre a taxa de desemprego
                e a audi√™ncia de TV Linear. Isso confirma a hip√≥tese de que, em per√≠odos de maior desemprego,
                as pessoas tendem a consumir mais conte√∫do de TV - possivelmente devido a:
                
                - Mais tempo dispon√≠vel em casa
                - Busca por entretenimento de baixo custo
                - Redu√ß√£o em atividades de lazer fora de casa
                
                **Implica√ß√£o estrat√©gica:** Durante per√≠odos de aumento no desemprego, pode ser vantajoso
                ajustar a programa√ß√£o para atender √†s necessidades deste p√∫blico crescente, com conte√∫dos
                que ofere√ßam escapismo, desenvolvimento profissional ou entretenimento econ√¥mico.
                """)
            elif corr < -0.3:
                st.error(f"**H√° uma correla√ß√£o negativa significativa ({corr:.2f}) entre desemprego e audi√™ncia TV**")
                st.markdown(f"""
                **An√°lise da rela√ß√£o desemprego-audi√™ncia:**
                
                Surpreendentemente, os dados mostram uma correla√ß√£o negativa significativa (**{corr:.2f}**) 
                entre a taxa de desemprego e a audi√™ncia de TV Linear, contrariando a hip√≥tese tradicional.
                Poss√≠veis explica√ß√µes incluem:
                
                - Mudan√ßas para alternativas de entretenimento mais econ√¥micas (como streaming compartilhado)
                - Cortes de servi√ßos pagos durante per√≠odos de restri√ß√£o financeira
                - Impacto psicol√≥gico que reduz o interesse em conte√∫do de entretenimento
                
                **Implica√ß√£o estrat√©gica:** Em per√≠odos de aumento do desemprego, pode ser necess√°rio
                reconsiderar modelos de precifica√ß√£o, oferecendo pacotes mais acess√≠veis ou flex√≠veis
                para reter audi√™ncia.
                """)
            else:
                st.info(f"**N√£o h√° correla√ß√£o significativa ({corr:.2f}) entre desemprego e audi√™ncia TV**")
                st.markdown(f"""
                **An√°lise da rela√ß√£o desemprego-audi√™ncia:**
                
                Os dados indicam uma correla√ß√£o fraca (**{corr:.2f}**) entre a taxa de desemprego
                e a audi√™ncia de TV Linear. Isso sugere que a audi√™ncia de TV n√£o √© significativamente
                afetada por varia√ß√µes na taxa de desemprego, possivelmente porque:
                
                - Outros fatores t√™m maior influ√™ncia nos h√°bitos de consumo de m√≠dia
                - Os efeitos do desemprego na audi√™ncia variam entre diferentes segmentos, neutralizando o efeito global
                - A TV se tornou um bem de consumo essencial, menos sujeito a flutua√ß√µes econ√¥micas
                
                **Implica√ß√£o estrat√©gica:** As decis√µes de programa√ß√£o e investimento podem ser baseadas
                em outros fatores al√©m das tend√™ncias de desemprego, como qualidade de conte√∫do ou prefer√™ncias
                demogr√°ficas espec√≠ficas.
                """)
        
        # Tend√™ncias de audi√™ncia vs. economia ao longo do tempo
        if eco_available and 'LINEAR_GLOBO_rat%' in df_diario.columns:
            st.subheader("Tend√™ncias de audi√™ncia vs. economia ao longo do tempo:")
            
            # Selecionar um indicador econ√¥mico representativo
            if 'EXTERNO_indice_cond_economicas' in df_diario.columns:
                eco_indicator = 'EXTERNO_indice_cond_economicas'
                eco_name = '√çndice de Condi√ß√µes Econ√¥micas'
            elif 'EXTERNO_unemployment_rate' in df_diario.columns:
                eco_indicator = 'EXTERNO_unemployment_rate'
                eco_name = 'Taxa de Desemprego'
            else:
                eco_indicator = eco_available[0]
                eco_name = eco_indicator.replace('EXTERNO_', '').replace('_', ' ').title()
            
            # Normalizar valores para compara√ß√£o
            df_diario['rating_norm'] = df_diario['LINEAR_GLOBO_rat%'] / df_diario['LINEAR_GLOBO_rat%'].max()
            df_diario['eco_norm'] = df_diario[eco_indicator] / df_diario[eco_indicator].max()
            
            fig = go.Figure()
            
            fig.add_trace(go.Scatter(x=df_diario['data_apenas'], y=df_diario['rating_norm'], 
                                    name='Rating TV (Normalizado)',
                                    line=dict(color='#1f77b4')))
            
            fig.add_trace(go.Scatter(x=df_diario['data_apenas'], y=df_diario['eco_norm'], 
                                    name=f'{eco_name} (Normalizado)',
                                    line=dict(color='#ff7f0e')))
            
            fig.update_layout(title=f'Tend√™ncia: Rating TV vs. {eco_name}',
                            xaxis_title='Data',
                            yaxis_title='Valor Normalizado (0-1)')
            
            st.plotly_chart(fig, use_container_width=True)
            
            st.markdown(f"""
            **Interpreta√ß√£o da tend√™ncia temporal:**
            
            O gr√°fico acima mostra a evolu√ß√£o ao longo do tempo do rating da TV Linear e do indicador econ√¥mico
            "{eco_name}", com ambos os valores normalizados para facilitar a compara√ß√£o.
            
            **O que observar:**
            - **Movimentos paralelos:** Indicam que o indicador econ√¥mico e a audi√™ncia TV est√£o se movendo juntos
            - **Movimentos contr√°rios:** Sugerem uma rela√ß√£o inversa entre o indicador e a audi√™ncia
            - **Defasagens (lags):** Podem indicar que mudan√ßas econ√¥micas afetam a audi√™ncia com atraso
            - **Pontos de inflex√£o:** Momentos onde a rela√ß√£o entre os dois fatores muda
            
            Esta an√°lise temporal complementa a correla√ß√£o est√°tica, revelando como a rela√ß√£o entre
            economia e audi√™ncia evolui ao longo do tempo e ajudando a identificar padr√µes sazonais ou c√≠clicos.
            """)
        
        # 4.2 Fatores ambientais e dados de mobilidade
        st.subheader("4.2 Fatores ambientais e dados de mobilidade definem o comportamento e a rotina das pessoas?")
        
        st.markdown("üöß **WORK IN PROGRESS** üöß")
        st.info("Esta an√°lise requer dados de fatores ambientais e mobilidade que n√£o est√£o dispon√≠veis no conjunto de dados atual.")
        
        st.markdown("""
        **O que pretendemos analisar aqui:**
        
        Esta se√ß√£o investigaria como fatores ambientais (clima, temperatura, eventos naturais) e padr√µes
        de mobilidade (deslocamento urbano, tr√°fego, home office) influenciam o consumo de TV Linear.
        
        **Metodologia que seria utilizada:**
        - Correla√ß√£o entre condi√ß√µes clim√°ticas e picos de audi√™ncia
        - An√°lise de como per√≠odos de restri√ß√£o de mobilidade afetam o consumo de m√≠dia
        - Compara√ß√£o de padr√µes de audi√™ncia em dias √∫teis vs. finais de semana
        - Efeito de eventos clim√°ticos extremos na audi√™ncia
        
        **Dados necess√°rios para esta an√°lise:**
        - Informa√ß√µes meteorol√≥gicas (temperatura, precipita√ß√£o, etc.)
        - Dados de mobilidade urbana (√≠ndices de congestionamento, uso de transporte p√∫blico)
        - Informa√ß√µes sobre padr√µes de trabalho (dias de home office, feriados)
        
        Esta an√°lise ser√° implementada quando os dados ambientais e de mobilidade estiverem dispon√≠veis.
        """)
        
    else:
        st.warning("Dados insuficientes para realizar a an√°lise. √â necess√°rio ter informa√ß√µes sobre indicadores econ√¥micos externos.")

@st.cache_data
def analise_percepcao_marca(df):
    """
    An√°lise para responder perguntas sobre como a percep√ß√£o da marca influencia a audi√™ncia.
    """
    st.header("A percep√ß√£o da marca influencia na audi√™ncia")
    
    st.markdown("""
    Esta an√°lise investiga como a percep√ß√£o da marca Globo e a viraliza√ß√£o de conte√∫dos
    influenciam a audi√™ncia da TV Linear, especialmente entre as novas gera√ß√µes.
    
    Exploramos duas quest√µes principais:
    1. O impacto da percep√ß√£o da audi√™ncia em rela√ß√£o √† marca Globo na audi√™ncia da TV Linear
    2. Como a viraliza√ß√£o de conte√∫dos nas redes sociais pode atrair novas gera√ß√µes para a TV
    """)
    
    # 5.1 A percep√ß√£o da nossa audi√™ncia em rela√ß√£o √† marca Globo afeta a audi√™ncia?
    st.subheader("5.1 A percep√ß√£o da nossa audi√™ncia em rela√ß√£o √† marca Globo afeta a audi√™ncia da TV linear?")
    
    st.markdown("üöß **WORK IN PROGRESS** üöß")
    st.info("Esta an√°lise requer dados de percep√ß√£o de marca (como pesquisas de opini√£o, sentimento em redes sociais) que n√£o est√£o dispon√≠veis no conjunto de dados atual.")
    
    st.markdown("""
    **O que pretendemos analisar aqui:**
    
    Esta se√ß√£o investigaria como a percep√ß√£o da marca Globo (sua imagem, reputa√ß√£o, sentimento associado)
    influencia os n√≠veis de audi√™ncia da TV Linear, especialmente entre diferentes segmentos demogr√°ficos.
    
    **Metodologia que seria utilizada:**
    - An√°lise de sentimento sobre a marca em redes sociais correlacionada com audi√™ncia
    - Segmenta√ß√£o por caracter√≠sticas demogr√°ficas (idade, regi√£o, etc.)
    - Estudo de como eventos relacionados √† marca afetam a audi√™ncia de curto e longo prazo
    - Correla√ß√£o entre m√©tricas de sa√∫de da marca e audi√™ncia
    
    **Dados necess√°rios para esta an√°lise:**
    - Pesquisas de opini√£o sobre a marca
    - Dados de sentimento em redes sociais
    - M√©tricas de reputa√ß√£o de marca
    - Segmenta√ß√£o demogr√°fica dos dados de audi√™ncia
    
    Esta an√°lise ser√° implementada quando os dados de percep√ß√£o de marca estiverem dispon√≠veis.
    """)
    
    # 5.2 A viraliza√ß√£o de conte√∫dos da TV linear nas redes sociais
    st.subheader("5.2 A viraliza√ß√£o de conte√∫dos da TV linear nas redes sociais pode atrair novas gera√ß√µes?")
    
    st.markdown("""
    Esta an√°lise examina como a viraliza√ß√£o de conte√∫dos da TV Linear nas redes sociais
    influencia a audi√™ncia futura, com foco especial nas novas gera√ß√µes (que tradicionalmente
    consomem menos TV Linear).
    
    **Metodologia:**
    - Avaliamos o efeito de compartilhamentos nas redes sociais na audi√™ncia futura
    - Analisamos como esse efeito varia ao longo de diferentes per√≠odos de tempo (1, 2, 3 e 7 dias)
    - Comparamos o impacto de diferentes plataformas sociais
    - Examinamos se o efeito √© mais forte em hor√°rios com p√∫blico mais jovem
    
    **Como interpretar:**
    - Correla√ß√µes positivas fortes: indicam que a viraliza√ß√£o atrai audi√™ncia futura
    - Diferen√ßas entre plataformas: revelam quais redes t√™m maior poder de convers√£o
    - Varia√ß√µes entre p√∫blicos: mostram se o efeito √© mais significativo para novas gera√ß√µes
    """)
    
    # Verificar se temos m√©tricas de viraliza√ß√£o
    viral_metrics = ['RS_GLOBO_INSTAGRAM_nr_shares', 'RS_GLOBO_FACEBOOK_nr_shares', 
                     'RS_GLOBO_TIKTOK_nr_shares', 'RS_GLOBO_YOUTUBE_nr_shares']
    
    available_viral = [col for col in viral_metrics if col in df.columns]
    
    if available_viral:
        # Agrupar dados por dia
        df['data_apenas'] = pd.to_datetime(df['data_hora']).dt.date
        
        # Selecionar apenas colunas num√©ricas para agrega√ß√£o
        numeric_cols = df.select_dtypes(include=['number']).columns.tolist()
        
        # Garantir que temos apenas as colunas que realmente existem nos dados
        cols_to_group = []
        for col in numeric_cols:
            if col in df.columns:
                cols_to_group.append(col)
        
        # Agrupar apenas colunas num√©ricas
        df_diario = df.groupby('data_apenas')[cols_to_group].mean().reset_index()
        
        # Verificar se conseguimos criar a m√©trica de viraliza√ß√£o total
        viral_cols_available = [col for col in available_viral if col in df_diario.columns]
        
        if len(viral_cols_available) > 0:
            # Criar uma m√©trica de viraliza√ß√£o total
            df_diario['total_shares'] = df_diario[viral_cols_available].sum(axis=1)
            
            # Criar lags para medir efeito posterior da viraliza√ß√£o
            for lag in [1, 2, 3, 7]:  # 1, 2, 3 e 7 dias ap√≥s
                df_diario[f'total_shares_lag{lag}'] = df_diario['total_shares'].shift(lag)
            
            # Remover linhas com NaN devido aos lags
            df_diario = df_diario.dropna()
            
            # Calcular correla√ß√£o entre compartilhamentos e audi√™ncia futura
            if 'LINEAR_GLOBO_rat%' in df_diario.columns:
                correlations = []
                for lag in [1, 2, 3, 7]:
                    corr = df_diario[f'total_shares_lag{lag}'].corr(df_diario['LINEAR_GLOBO_rat%'])
                    correlations.append({
                        'Dias ap√≥s viraliza√ß√£o': lag,
                        'Correla√ß√£o com audi√™ncia': corr
                    })
                
                df_correlations = pd.DataFrame(correlations)
                
                # Visualizar o efeito temporal da viraliza√ß√£o
                fig = px.line(df_correlations, x='Dias ap√≥s viraliza√ß√£o', y='Correla√ß√£o com audi√™ncia',
                             markers=True,
                             title='Efeito temporal da viraliza√ß√£o na audi√™ncia TV',
                             labels={'Correla√ß√£o com audi√™ncia': 'Correla√ß√£o com Rating TV'})
                
                st.plotly_chart(fig, use_container_width=True)
                
                st.markdown("""
                **Interpreta√ß√£o do efeito temporal da viraliza√ß√£o:**
                
                O gr√°fico acima mostra como a correla√ß√£o entre compartilhamentos nas redes sociais
                e a audi√™ncia da TV Linear varia ao longo de diferentes per√≠odos ap√≥s a viraliza√ß√£o
                (1, 2, 3 e 7 dias).
                
                **O que observar:**
                - **Pico de correla√ß√£o:** Indica o momento em que a viraliza√ß√£o tem maior impacto na audi√™ncia
                - **Persist√™ncia do efeito:** Mostra quanto tempo o efeito da viraliza√ß√£o dura
                - **Decl√≠nio ou aumento com o tempo:** Revela se o impacto √© imediato ou tem efeito cumulativo
                
                Esta an√°lise temporal √© crucial para entender n√£o apenas se a viraliza√ß√£o funciona,
                mas tamb√©m quando seu efeito √© maximizado, permitindo estrat√©gias de programa√ß√£o que
                aproveitem esses padr√µes.
                """)
                
                # An√°lise de viraliza√ß√£o por plataforma
                platform_corrs = []
                for platform in ['INSTAGRAM', 'FACEBOOK', 'TIKTOK', 'YOUTUBE']:
                    share_col = f'RS_GLOBO_{platform}_nr_shares'
                    
                    # Verificar se a coluna espec√≠fica existe no df_diario
                    if share_col in df_diario.columns:
                        # Criar uma nova coluna para o lag
                        lag_col_name = f'{platform}_lag1'
                        # Criar o lag para esta plataforma espec√≠fica
                        df_diario[lag_col_name] = df_diario[share_col].shift(1)
                        
                        # Calcular correla√ß√£o
                        corr = df_diario[lag_col_name].corr(df_diario['LINEAR_GLOBO_rat%'])
                        platform_corrs.append({
                            'Plataforma': platform,
                            'Correla√ß√£o com audi√™ncia': corr
                        })
                
                if platform_corrs:
                    df_platforms = pd.DataFrame(platform_corrs)
                    
                    # Ordenar por correla√ß√£o
                    df_platforms = df_platforms.sort_values('Correla√ß√£o com audi√™ncia', ascending=False)
                    
                    # Visualizar impacto por plataforma
                    fig = px.bar(df_platforms, x='Plataforma', y='Correla√ß√£o com audi√™ncia',
                               title='Impacto da viraliza√ß√£o por plataforma na audi√™ncia TV futura',
                               labels={'Correla√ß√£o com audi√™ncia': 'Correla√ß√£o com Rating TV'},
                               color='Correla√ß√£o com audi√™ncia',
                               color_continuous_scale=['red', 'yellow', 'green'])
                    
                    st.plotly_chart(fig, use_container_width=True)
                    
                    # An√°lise autom√°tica
                    if len(df_platforms) > 0:
                        best_platform = df_platforms.iloc[0]
                        if best_platform['Correla√ß√£o com audi√™ncia'] > 0.3:
                            st.success(f"**{best_platform['Plataforma']} mostra forte influ√™ncia positiva da viraliza√ß√£o na audi√™ncia futura (r = {best_platform['Correla√ß√£o com audi√™ncia']:.2f})**")
                            st.markdown(f"""
                            **An√°lise por plataforma:**
                            
                            Entre todas as plataformas analisadas, **{best_platform['Plataforma']}** mostra a
                            correla√ß√£o mais forte (**{best_platform['Correla√ß√£o com audi√™ncia']:.2f}**) entre
                            compartilhamentos e audi√™ncia futura da TV Linear.
                            
                            **Caracter√≠sticas potenciais do sucesso:**
                            - Perfil demogr√°fico dos usu√°rios mais alinhado com potenciais espectadores de TV
                            - Formato de compartilhamento que gera maior interesse e convers√£o
                            - Conte√∫dos viralizados nesta plataforma podem ter maior poder de atra√ß√£o
                            
                            **Recomenda√ß√£o:** Priorizar estrat√©gias de viraliza√ß√£o no {best_platform['Plataforma']},
                            desenvolver conte√∫dos especificamente formatados para esta plataforma, e criar
                            chamadas para a√ß√£o mais diretas que levem os usu√°rios para a TV Linear.
                            """)
                        elif best_platform['Correla√ß√£o com audi√™ncia'] > 0.15:
                            st.info(f"**{best_platform['Plataforma']} mostra influ√™ncia moderada da viraliza√ß√£o na audi√™ncia futura (r = {best_platform['Correla√ß√£o com audi√™ncia']:.2f})**")
                            st.markdown(f"""
                            **An√°lise por plataforma:**
                            
                            A plataforma **{best_platform['Plataforma']}** mostra uma correla√ß√£o moderada
                            (**{best_platform['Correla√ß√£o com audi√™ncia']:.2f}**) entre compartilhamentos e
                            audi√™ncia futura da TV Linear.
                            
                            **Caracter√≠sticas potenciais:**
                            - Alguma capacidade de convers√£o, mas com limita√ß√µes
                            - P√∫blico parcialmente alinhado com potenciais espectadores de TV
                            - Conte√∫dos viralizados geram interesse, mas nem sempre convers√£o efetiva
                            
                            **Recomenda√ß√£o:** Avaliar quais tipos espec√≠ficos de conte√∫do nesta plataforma
                            t√™m maior taxa de convers√£o, e focar em formatos e chamadas para a√ß√£o que
                            maximizem a transfer√™ncia de audi√™ncia para a TV Linear.
                            """)
                        else:
                            st.warning("**Nenhuma plataforma mostra forte evid√™ncia de que a viraliza√ß√£o aumenta a audi√™ncia futura**")
                            st.markdown("""
                            **An√°lise por plataforma:**
                            
                            Nenhuma plataforma social mostra uma correla√ß√£o forte entre compartilhamentos
                            e audi√™ncia futura da TV Linear, sugerindo que a viraliza√ß√£o de conte√∫dos
                            atualmente n√£o est√° sendo eficaz em converter usu√°rios de redes sociais em
                            espectadores de TV.
                            
                            **Poss√≠veis raz√µes:**
                            - Desconex√£o entre o conte√∫do viralizado e a programa√ß√£o de TV
                            - Aus√™ncia de chamadas para a√ß√£o efetivas direcionando para a TV
                            - Diferen√ßa fundamental entre o p√∫blico das redes sociais e potenciais espectadores de TV
                            
                            **Recomenda√ß√£o:** Reconsiderar a estrat√©gia de viraliza√ß√£o, com foco em criar
                            conte√∫dos que despertem curiosidade espec√≠fica sobre a programa√ß√£o de TV e incluam
                            chamadas para a√ß√£o mais claras e atraentes.
                            """)
            
            # An√°lise para novas gera√ß√µes (por proxy de hor√°rio)
            df['hora'] = pd.to_datetime(df['data_hora']).dt.hour
            
            # Hor√°rios com maior presen√ßa de p√∫blico jovem (19h-23h)
            df['horario_jovem'] = df['hora'].between(19, 23)
            
            # Selecionar apenas as colunas que realmente existem
            cols_for_analysis = ['data_apenas', 'horario_jovem']
            
            # Adicionar colunas num√©ricas necess√°rias se existirem
            if 'LINEAR_GLOBO_rat%' in df.columns:
                cols_for_analysis.append('LINEAR_GLOBO_rat%')
            
            # Adicionar colunas de viraliza√ß√£o espec√≠ficas
            target_viral_cols = ['RS_GLOBO_INSTAGRAM_nr_shares', 'RS_GLOBO_TIKTOK_nr_shares']
            for col in target_viral_cols:
                if col in df.columns:
                    cols_for_analysis.append(col)
            
            # Verificar se temos pelo menos uma coluna de viraliza√ß√£o
            has_viral_cols = any(col in cols_for_analysis for col in target_viral_cols)
            
            if has_viral_cols and 'LINEAR_GLOBO_rat%' in cols_for_analysis:
                # Criar um dataframe apenas com as colunas que precisamos
                df_horario = df[cols_for_analysis].copy()
                
                # Calcular a m√©dia de cada m√©trica por dia e tipo de hor√°rio
                df_horario = df_horario.groupby(['data_apenas', 'horario_jovem']).mean().reset_index()
                
                # Criar a m√©trica de viraliza√ß√£o jovem
                viral_jovem_cols = [col for col in target_viral_cols if col in df_horario.columns]
                
                if viral_jovem_cols:
                    # Se tivermos colunas de viraliza√ß√£o, criar a soma
                    df_horario['viral_jovem'] = df_horario[viral_jovem_cols].sum(axis=1)
                    
                    # Separar dados para hor√°rios jovens e n√£o-jovens
                    df_jovem = df_horario[df_horario['horario_jovem'] == True]
                    df_nao_jovem = df_horario[df_horario['horario_jovem'] == False]
                    
                    # Calcular correla√ß√£o para cada grupo se tivermos dados suficientes
                    if len(df_jovem) > 5 and len(df_nao_jovem) > 5:
                        corr_jovem = df_jovem['viral_jovem'].corr(df_jovem['LINEAR_GLOBO_rat%'])
                        corr_nao_jovem = df_nao_jovem['viral_jovem'].corr(df_nao_jovem['LINEAR_GLOBO_rat%'])
                        
                        # Visualizar compara√ß√£o
                        corr_data = pd.DataFrame([
                            {'P√∫blico': 'Hor√°rio Jovem (19h-23h)', 'Correla√ß√£o': corr_jovem},
                            {'P√∫blico': 'Outros Hor√°rios', 'Correla√ß√£o': corr_nao_jovem}
                        ])
                        
                        fig = px.bar(corr_data, x='P√∫blico', y='Correla√ß√£o',
                                   title='Impacto da viraliza√ß√£o na audi√™ncia por tipo de p√∫blico',
                                   labels={'Correla√ß√£o': 'Correla√ß√£o Viraliza√ß√£o vs. Rating TV'},
                                   color='Correla√ß√£o',
                                   color_continuous_scale=['red', 'yellow', 'green'])
                        
                        st.plotly_chart(fig, use_container_width=True)
                        
                        st.markdown("""
                        **Interpreta√ß√£o do impacto por tipo de p√∫blico:**
                        
                        O gr√°fico acima compara a correla√ß√£o entre viraliza√ß√£o e audi√™ncia TV para
                        hor√°rios com maior presen√ßa de p√∫blico jovem (19h-23h) versus outros hor√°rios.
                        
                        **O que observar:**
                        - **Diferen√ßa entre os grupos:** Indica se a viraliza√ß√£o tem efeito diferente em p√∫blicos jovens
                        - **Correla√ß√£o mais forte em hor√°rio jovem:** Sugere que jovens s√£o mais influenciados pela viraliza√ß√£o
                        - **Correla√ß√£o mais forte em outros hor√°rios:** Indica que p√∫blicos tradicionais s√£o mais sens√≠veis √† viraliza√ß√£o
                        
                        Esta compara√ß√£o √© crucial para entender se a viraliza√ß√£o √© uma estrat√©gia eficaz
                        especificamente para atrair p√∫blicos mais jovens para a TV Linear.
                        """)
                        
                        # An√°lise autom√°tica
                        if corr_jovem > corr_nao_jovem and corr_jovem > 0.2:
                            st.success(f"**A viraliza√ß√£o tem um impacto mais forte na audi√™ncia em hor√°rios com p√∫blico mais jovem (r = {corr_jovem:.2f} vs. {corr_nao_jovem:.2f})**")
                            st.markdown(f"""
                            **Conclus√£o sobre impacto nas novas gera√ß√µes:**
                            
                            A an√°lise mostra que a viraliza√ß√£o tem um impacto significativamente maior
                            na audi√™ncia durante hor√°rios com maior presen√ßa de p√∫blico jovem (correla√ß√£o de **{corr_jovem:.2f}**)
                            comparado a outros hor√°rios ({corr_nao_jovem:.2f}).
                            
                            **Implica√ß√µes importantes:**
                            - Novas gera√ß√µes s√£o mais suscet√≠veis √† influ√™ncia de conte√∫dos virais
                            - A viraliza√ß√£o √© uma estrat√©gia eficaz para atrair p√∫blico jovem para a TV Linear
                            - Existe uma ponte natural entre redes sociais e TV para este p√∫blico
                            
                            **Recomenda√ß√£o:** Priorizar estrat√©gias de viraliza√ß√£o especificamente direcionadas ao p√∫blico jovem,
                            com foco em conte√∫dos exibidos no hor√°rio nobre, que √© quando este p√∫blico est√° mais dispon√≠vel
                            e receptivo √† transfer√™ncia entre plataformas.
                            """)
                        elif corr_nao_jovem > corr_jovem and corr_nao_jovem > 0.2:
                            st.info(f"**A viraliza√ß√£o tem um impacto mais forte na audi√™ncia em hor√°rios com p√∫blico mais velho (r = {corr_nao_jovem:.2f} vs. {corr_jovem:.2f})**")
                            st.markdown(f"""
                            **Conclus√£o sobre impacto nas diferentes gera√ß√µes:**
                            
                            Surpreendentemente, a an√°lise mostra que a viraliza√ß√£o tem um impacto significativamente maior
                            na audi√™ncia durante hor√°rios com presen√ßa de p√∫blico mais velho (correla√ß√£o de **{corr_nao_jovem:.2f}**)
                            comparado a hor√°rios jovens ({corr_jovem:.2f}).
                            
                            **Poss√≠veis explica√ß√µes:**
                            - P√∫blicos mais velhos podem ser mais fi√©is √† TV e mais f√°ceis de reconverter
                            - Conte√∫dos que viralizam atualmente podem ressoar mais com audi√™ncias tradicionais
                            - Jovens podem consumir conte√∫do viral sem necessariamente migrar para a TV
                            
                            **Recomenda√ß√£o:** Considerar adaptar a estrat√©gia de viraliza√ß√£o para atrair novos espectadores
                            de faixas et√°rias intermedi√°rias, que s√£o mais propensas a converter engajamento social em
                            consumo de TV, enquanto desenvolve abordagens espec√≠ficas para atrair jovens.
                            """)
                        else:
                            st.warning(f"**N√£o h√° diferen√ßa significativa no impacto da viraliza√ß√£o entre p√∫blicos jovens e mais velhos (r = {corr_jovem:.2f} vs. {corr_nao_jovem:.2f})**")
                            st.markdown(f"""
                            **Conclus√£o sobre impacto nas diferentes gera√ß√µes:**
                            
                            A an√°lise mostra que n√£o h√° diferen√ßa significativa no impacto da viraliza√ß√£o
                            entre hor√°rios com p√∫blico jovem ({corr_jovem:.2f}) e outros hor√°rios ({corr_nao_jovem:.2f}).
                            Isso sugere que a idade pode n√£o ser o fator determinante na resposta √† viraliza√ß√£o.
                            
                            **Implica√ß√µes:**
                            - Outros fatores al√©m da idade podem ser mais importantes (como interesse no conte√∫do)
                            - A convers√£o de engajamento social para TV pode seguir padr√µes similares independente da faixa et√°ria
                            - A efic√°cia da viraliza√ß√£o pode depender mais da qualidade e relev√¢ncia do conte√∫do do que do p√∫blico-alvo
                            
                            **Recomenda√ß√£o:** Focar em estrat√©gias de viraliza√ß√£o baseadas na qualidade e relev√¢ncia do conte√∫do,
                            com mensagens que atraiam espectadores de todas as idades, em vez de segmentar especificamente por gera√ß√£o.
                            """)
                    else:
                        st.warning("Dados insuficientes para an√°lise de correla√ß√£o por faixa hor√°ria.")
                else:
                    st.warning("M√©tricas de viraliza√ß√£o para Instagram e TikTok n√£o est√£o dispon√≠veis para an√°lise.")
            else:
                st.warning("Dados insuficientes para an√°lise de p√∫blicos jovens.")
        else:
            st.warning("N√£o foi poss√≠vel criar a m√©trica de viraliza√ß√£o total. Verificar disponibilidade de dados.")
    else:
        st.warning("Dados insuficientes para realizar a an√°lise. √â necess√°rio ter m√©tricas de compartilhamento em redes sociais.")